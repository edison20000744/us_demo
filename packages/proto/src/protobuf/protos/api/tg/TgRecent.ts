// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/tg/TgRecent.proto" (package "ApiProtos.Tg.TgRecent", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Tg.TgRecent.TgRecent
 */
export interface TgRecent {
    /**
     * @generated from protobuf field: repeated ApiProtos.Tg.TgRecent.TgRecent.match payload = 1;
     */
    payload: TgRecent_match[]; // 賽事資訊 api payload(陣列)
}
/**
 * @generated from protobuf message ApiProtos.Tg.TgRecent.TgRecent.match
 */
export interface TgRecent_match {
    /**
     * @generated from protobuf field: int32 matchId = 1;
     */
    matchId: number; // 賽事id
    /**
     * @generated from protobuf field: int32 status = 2;
     */
    status: number; // 賽是狀態
    /**
     * @generated from protobuf field: int32 tgStatus = 3;
     */
    tgStatus: number; // tg賽事狀態是否開啟 0未開啟 1開啟
    /**
     * @generated from protobuf field: int32 homeId = 4;
     */
    homeId: number; // 主隊id
    /**
     * @generated from protobuf field: int32 awayId = 5;
     */
    awayId: number; // 客隊id
    /**
     * @generated from protobuf field: string home = 6;
     */
    home: string; // 主隊名稱
    /**
     * @generated from protobuf field: string homeShortName = 7;
     */
    homeShortName: string; // 主隊簡稱
    /**
     * @generated from protobuf field: string away = 8;
     */
    away: string; // 客隊名稱
    /**
     * @generated from protobuf field: string awayShortName = 9;
     */
    awayShortName: string; // 客隊簡稱
    /**
     * @generated from protobuf field: string homeLogo = 10;
     */
    homeLogo: string; // 主隊Logo
    /**
     * @generated from protobuf field: string awayLogo = 11;
     */
    awayLogo: string; // 客隊Logo
    /**
     * @generated from protobuf field: int32 leagueId = 12;
     */
    leagueId: number; // 聯盟id
    /**
     * @generated from protobuf field: string league = 13;
     */
    league: string; // 聯盟名稱
    /**
     * @generated from protobuf field: string leagueShortNameEn = 14;
     */
    leagueShortNameEn: string; // 聯盟簡稱(英文)
    /**
     * @generated from protobuf field: string leagueLogo = 15;
     */
    leagueLogo: string; // 聯盟Logo
    /**
     * @generated from protobuf field: int32 openDate = 16;
     */
    openDate: number; // 開賽時間(timestamp)
    /**
     * @generated from protobuf field: int32 betsCount = 17;
     */
    betsCount: number; // 總下注量
    /**
     * @generated from protobuf field: int32 neutral = 18;
     */
    neutral: number; // 是否為中立場
    /**
     * @generated from protobuf field: string maxScore = 19;
     */
    maxScore: string; // 最大出現率名稱
    /**
     * @generated from protobuf field: string maxValue = 20;
     */
    maxValue: string; // 最小出現率名稱
    /**
     * @generated from protobuf field: string minScore = 21;
     */
    minScore: string; // 最大出現率%
    /**
     * @generated from protobuf field: string minValue = 22;
     */
    minValue: string; // 最小出現率%
}
// @generated message type with reflection information, may provide speed optimized methods
class TgRecent$Type extends MessageType<TgRecent> {
    constructor() {
        super("ApiProtos.Tg.TgRecent.TgRecent", [
            { no: 1, name: "payload", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TgRecent_match }
        ]);
    }
    create(value?: PartialMessage<TgRecent>): TgRecent {
        const message = { payload: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TgRecent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TgRecent): TgRecent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Tg.TgRecent.TgRecent.match payload */ 1:
                    message.payload.push(TgRecent_match.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TgRecent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Tg.TgRecent.TgRecent.match payload = 1; */
        for (let i = 0; i < message.payload.length; i++)
            TgRecent_match.internalBinaryWrite(message.payload[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Tg.TgRecent.TgRecent
 */
export const TgRecent = new TgRecent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TgRecent_match$Type extends MessageType<TgRecent_match> {
    constructor() {
        super("ApiProtos.Tg.TgRecent.TgRecent.match", [
            { no: 1, name: "matchId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "tgStatus", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "homeId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "awayId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "home", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "homeShortName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "away", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "awayShortName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "homeLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "awayLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "leagueId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "league", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "leagueShortNameEn", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "leagueLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "openDate", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 17, name: "betsCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 18, name: "neutral", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 19, name: "maxScore", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 20, name: "maxValue", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 21, name: "minScore", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 22, name: "minValue", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TgRecent_match>): TgRecent_match {
        const message = { matchId: 0, status: 0, tgStatus: 0, homeId: 0, awayId: 0, home: "", homeShortName: "", away: "", awayShortName: "", homeLogo: "", awayLogo: "", leagueId: 0, league: "", leagueShortNameEn: "", leagueLogo: "", openDate: 0, betsCount: 0, neutral: 0, maxScore: "", maxValue: "", minScore: "", minValue: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TgRecent_match>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TgRecent_match): TgRecent_match {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 matchId */ 1:
                    message.matchId = reader.int32();
                    break;
                case /* int32 status */ 2:
                    message.status = reader.int32();
                    break;
                case /* int32 tgStatus */ 3:
                    message.tgStatus = reader.int32();
                    break;
                case /* int32 homeId */ 4:
                    message.homeId = reader.int32();
                    break;
                case /* int32 awayId */ 5:
                    message.awayId = reader.int32();
                    break;
                case /* string home */ 6:
                    message.home = reader.string();
                    break;
                case /* string homeShortName */ 7:
                    message.homeShortName = reader.string();
                    break;
                case /* string away */ 8:
                    message.away = reader.string();
                    break;
                case /* string awayShortName */ 9:
                    message.awayShortName = reader.string();
                    break;
                case /* string homeLogo */ 10:
                    message.homeLogo = reader.string();
                    break;
                case /* string awayLogo */ 11:
                    message.awayLogo = reader.string();
                    break;
                case /* int32 leagueId */ 12:
                    message.leagueId = reader.int32();
                    break;
                case /* string league */ 13:
                    message.league = reader.string();
                    break;
                case /* string leagueShortNameEn */ 14:
                    message.leagueShortNameEn = reader.string();
                    break;
                case /* string leagueLogo */ 15:
                    message.leagueLogo = reader.string();
                    break;
                case /* int32 openDate */ 16:
                    message.openDate = reader.int32();
                    break;
                case /* int32 betsCount */ 17:
                    message.betsCount = reader.int32();
                    break;
                case /* int32 neutral */ 18:
                    message.neutral = reader.int32();
                    break;
                case /* string maxScore */ 19:
                    message.maxScore = reader.string();
                    break;
                case /* string maxValue */ 20:
                    message.maxValue = reader.string();
                    break;
                case /* string minScore */ 21:
                    message.minScore = reader.string();
                    break;
                case /* string minValue */ 22:
                    message.minValue = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TgRecent_match, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 matchId = 1; */
        if (message.matchId !== 0)
            writer.tag(1, WireType.Varint).int32(message.matchId);
        /* int32 status = 2; */
        if (message.status !== 0)
            writer.tag(2, WireType.Varint).int32(message.status);
        /* int32 tgStatus = 3; */
        if (message.tgStatus !== 0)
            writer.tag(3, WireType.Varint).int32(message.tgStatus);
        /* int32 homeId = 4; */
        if (message.homeId !== 0)
            writer.tag(4, WireType.Varint).int32(message.homeId);
        /* int32 awayId = 5; */
        if (message.awayId !== 0)
            writer.tag(5, WireType.Varint).int32(message.awayId);
        /* string home = 6; */
        if (message.home !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.home);
        /* string homeShortName = 7; */
        if (message.homeShortName !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.homeShortName);
        /* string away = 8; */
        if (message.away !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.away);
        /* string awayShortName = 9; */
        if (message.awayShortName !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.awayShortName);
        /* string homeLogo = 10; */
        if (message.homeLogo !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.homeLogo);
        /* string awayLogo = 11; */
        if (message.awayLogo !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.awayLogo);
        /* int32 leagueId = 12; */
        if (message.leagueId !== 0)
            writer.tag(12, WireType.Varint).int32(message.leagueId);
        /* string league = 13; */
        if (message.league !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.league);
        /* string leagueShortNameEn = 14; */
        if (message.leagueShortNameEn !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.leagueShortNameEn);
        /* string leagueLogo = 15; */
        if (message.leagueLogo !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.leagueLogo);
        /* int32 openDate = 16; */
        if (message.openDate !== 0)
            writer.tag(16, WireType.Varint).int32(message.openDate);
        /* int32 betsCount = 17; */
        if (message.betsCount !== 0)
            writer.tag(17, WireType.Varint).int32(message.betsCount);
        /* int32 neutral = 18; */
        if (message.neutral !== 0)
            writer.tag(18, WireType.Varint).int32(message.neutral);
        /* string maxScore = 19; */
        if (message.maxScore !== "")
            writer.tag(19, WireType.LengthDelimited).string(message.maxScore);
        /* string maxValue = 20; */
        if (message.maxValue !== "")
            writer.tag(20, WireType.LengthDelimited).string(message.maxValue);
        /* string minScore = 21; */
        if (message.minScore !== "")
            writer.tag(21, WireType.LengthDelimited).string(message.minScore);
        /* string minValue = 22; */
        if (message.minValue !== "")
            writer.tag(22, WireType.LengthDelimited).string(message.minValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Tg.TgRecent.TgRecent.match
 */
export const TgRecent_match = new TgRecent_match$Type();
