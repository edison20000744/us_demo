// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/popular/PopularLeagues.proto" (package "ApiProtos.Popular.PopularLeagues", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Popular.PopularLeagues.PopularLeagues
 */
export interface PopularLeagues {
    /**
     * @generated from protobuf field: repeated ApiProtos.Popular.PopularLeagues.PopularLeagues.League payload = 1;
     */
    payload: PopularLeagues_League[]; // 聯盟資訊 api payload(陣列)
}
/**
 * @generated from protobuf message ApiProtos.Popular.PopularLeagues.PopularLeagues.League
 */
export interface PopularLeagues_League {
    /**
     * @generated from protobuf field: string areaName = 1;
     */
    areaName: string; // 區域名稱
    /**
     * @generated from protobuf field: string countryName = 2;
     */
    countryName: string; // 國家名稱
    /**
     * @generated from protobuf field: int32 LeagueId = 3 [json_name = "LeagueId"];
     */
    leagueId: number; // 聯盟id
    /**
     * @generated from protobuf field: string LeagueName = 4 [json_name = "LeagueName"];
     */
    leagueName: string; // 聯盟名稱
    /**
     * @generated from protobuf field: int32 seasonId = 5;
     */
    seasonId: number; // 賽季id
    /**
     * @generated from protobuf field: string logo = 6;
     */
    logo: string; // 聯盟Logo
}
// @generated message type with reflection information, may provide speed optimized methods
class PopularLeagues$Type extends MessageType<PopularLeagues> {
    constructor() {
        super("ApiProtos.Popular.PopularLeagues.PopularLeagues", [
            { no: 1, name: "payload", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PopularLeagues_League }
        ]);
    }
    create(value?: PartialMessage<PopularLeagues>): PopularLeagues {
        const message = { payload: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PopularLeagues>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PopularLeagues): PopularLeagues {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Popular.PopularLeagues.PopularLeagues.League payload */ 1:
                    message.payload.push(PopularLeagues_League.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PopularLeagues, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Popular.PopularLeagues.PopularLeagues.League payload = 1; */
        for (let i = 0; i < message.payload.length; i++)
            PopularLeagues_League.internalBinaryWrite(message.payload[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Popular.PopularLeagues.PopularLeagues
 */
export const PopularLeagues = new PopularLeagues$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PopularLeagues_League$Type extends MessageType<PopularLeagues_League> {
    constructor() {
        super("ApiProtos.Popular.PopularLeagues.PopularLeagues.League", [
            { no: 1, name: "areaName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "countryName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "LeagueId", kind: "scalar", jsonName: "LeagueId", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "LeagueName", kind: "scalar", jsonName: "LeagueName", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "seasonId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<PopularLeagues_League>): PopularLeagues_League {
        const message = { areaName: "", countryName: "", leagueId: 0, leagueName: "", seasonId: 0, logo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PopularLeagues_League>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PopularLeagues_League): PopularLeagues_League {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string areaName */ 1:
                    message.areaName = reader.string();
                    break;
                case /* string countryName */ 2:
                    message.countryName = reader.string();
                    break;
                case /* int32 LeagueId = 3 [json_name = "LeagueId"];*/ 3:
                    message.leagueId = reader.int32();
                    break;
                case /* string LeagueName = 4 [json_name = "LeagueName"];*/ 4:
                    message.leagueName = reader.string();
                    break;
                case /* int32 seasonId */ 5:
                    message.seasonId = reader.int32();
                    break;
                case /* string logo */ 6:
                    message.logo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PopularLeagues_League, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string areaName = 1; */
        if (message.areaName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.areaName);
        /* string countryName = 2; */
        if (message.countryName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.countryName);
        /* int32 LeagueId = 3 [json_name = "LeagueId"]; */
        if (message.leagueId !== 0)
            writer.tag(3, WireType.Varint).int32(message.leagueId);
        /* string LeagueName = 4 [json_name = "LeagueName"]; */
        if (message.leagueName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.leagueName);
        /* int32 seasonId = 5; */
        if (message.seasonId !== 0)
            writer.tag(5, WireType.Varint).int32(message.seasonId);
        /* string logo = 6; */
        if (message.logo !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.logo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Popular.PopularLeagues.PopularLeagues.League
 */
export const PopularLeagues_League = new PopularLeagues_League$Type();
