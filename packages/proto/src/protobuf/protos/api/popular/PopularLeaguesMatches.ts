// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/popular/PopularLeaguesMatches.proto" (package "ApiProtos.Popular.PopularLeaguesMatches", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches
 */
export interface PopularLeagueMatches {
    /**
     * @generated from protobuf field: repeated ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Match payload = 1;
     */
    payload: PopularLeagueMatches_Match[]; // 賽事資訊 api payload(陣列)
}
/**
 * @generated from protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index
 */
export interface PopularLeagueMatches_Index {
    /**
     * @generated from protobuf field: string home = 1;
     */
    home: string; // 主勝
    /**
     * @generated from protobuf field: string handicap = 2;
     */
    handicap: string; // 盤口(和)
    /**
     * @generated from protobuf field: string away = 3;
     */
    away: string; // 客勝
    /**
     * @generated from protobuf field: int32 closed = 4;
     */
    closed: number; // 是否封盤
}
/**
 * @generated from protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Odds
 */
export interface PopularLeagueMatches_Odds {
    /**
     * @generated from protobuf field: ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index asia = 1;
     */
    asia?: PopularLeagueMatches_Index; // 亞盤
    /**
     * @generated from protobuf field: ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index eu = 2;
     */
    eu?: PopularLeagueMatches_Index; // 歐盤
    /**
     * @generated from protobuf field: ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index bs = 3;
     */
    bs?: PopularLeagueMatches_Index; // 大小球
    /**
     * @generated from protobuf field: ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index cr = 4;
     */
    cr?: PopularLeagueMatches_Index; // 角球
}
/**
 * @generated from protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.TgOdds
 */
export interface PopularLeagueMatches_TgOdds {
    /**
     * @generated from protobuf field: string transaction = 1;
     */
    transaction: string; // 可交易量
    /**
     * @generated from protobuf field: string profit = 2;
     */
    profit: string; // 獲利率
    /**
     * @generated from protobuf field: string betMoney = 3;
     */
    betMoney: string; // 累計金額
    /**
     * @generated from protobuf field: int32 isPopular = 4;
     */
    isPopular: number; // 是否熱銷 0否 1是
    /**
     * @generated from protobuf field: int32 isSoldOut = 5;
     */
    isSoldOut: number; // 是否售完 0否 1是
    /**
     * @generated from protobuf field: string selectionName = 6;
     */
    selectionName: string; // 0-0 0-1 0-2 0-3 1-0 1-1 1-2 1-3 2-0 2-1 2-2 2-3 3-0 3-1 3-2 3-3 homeFourOrMore awayFourOrMore 盤口資訊
}
/**
 * @generated from protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Match
 */
export interface PopularLeagueMatches_Match {
    /**
     * @generated from protobuf field: int32 matchId = 1;
     */
    matchId: number; // 賽事id
    /**
     * @generated from protobuf field: int32 status = 2;
     */
    status: number; // 賽事狀態
    /**
     * @generated from protobuf field: int32 openDate = 3;
     */
    openDate: number; // 開賽時間(timestamp)
    /**
     * @generated from protobuf field: int32 startTime = 4;
     */
    startTime: number; // 實際開球時間(timestamp)
    /**
     * @generated from protobuf field: int32 homeId = 5;
     */
    homeId: number; // 主隊id
    /**
     * @generated from protobuf field: string homeName = 6;
     */
    homeName: string; // 主隊名稱
    /**
     * @generated from protobuf field: int32 homeScore = 7;
     */
    homeScore: number; // 主隊Logo
    /**
     * @generated from protobuf field: string homeLogo = 8;
     */
    homeLogo: string; // 主隊全場分數
    /**
     * @generated from protobuf field: int32 awayId = 9;
     */
    awayId: number; // 客隊id
    /**
     * @generated from protobuf field: string awayName = 10;
     */
    awayName: string; // 客隊名稱
    /**
     * @generated from protobuf field: int32 awayScore = 11;
     */
    awayScore: number; // 客隊全場分數
    /**
     * @generated from protobuf field: string awayLogo = 12;
     */
    awayLogo: string; // 客隊Logo
    /**
     * @generated from protobuf field: int32 neutral = 13;
     */
    neutral: number; // 是否為中立場
    /**
     * @generated from protobuf field: ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Odds odds = 14;
     */
    odds?: PopularLeagueMatches_Odds; // 一般指數資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.TgOdds tgOdds = 15;
     */
    tgOdds: PopularLeagueMatches_TgOdds[]; // TG指數資訊
}
// @generated message type with reflection information, may provide speed optimized methods
class PopularLeagueMatches$Type extends MessageType<PopularLeagueMatches> {
    constructor() {
        super("ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches", [
            { no: 1, name: "payload", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PopularLeagueMatches_Match }
        ]);
    }
    create(value?: PartialMessage<PopularLeagueMatches>): PopularLeagueMatches {
        const message = { payload: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PopularLeagueMatches>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PopularLeagueMatches): PopularLeagueMatches {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Match payload */ 1:
                    message.payload.push(PopularLeagueMatches_Match.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PopularLeagueMatches, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Match payload = 1; */
        for (let i = 0; i < message.payload.length; i++)
            PopularLeagueMatches_Match.internalBinaryWrite(message.payload[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches
 */
export const PopularLeagueMatches = new PopularLeagueMatches$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PopularLeagueMatches_Index$Type extends MessageType<PopularLeagueMatches_Index> {
    constructor() {
        super("ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index", [
            { no: 1, name: "home", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "handicap", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "away", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "closed", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PopularLeagueMatches_Index>): PopularLeagueMatches_Index {
        const message = { home: "", handicap: "", away: "", closed: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PopularLeagueMatches_Index>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PopularLeagueMatches_Index): PopularLeagueMatches_Index {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string home */ 1:
                    message.home = reader.string();
                    break;
                case /* string handicap */ 2:
                    message.handicap = reader.string();
                    break;
                case /* string away */ 3:
                    message.away = reader.string();
                    break;
                case /* int32 closed */ 4:
                    message.closed = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PopularLeagueMatches_Index, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string home = 1; */
        if (message.home !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.home);
        /* string handicap = 2; */
        if (message.handicap !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.handicap);
        /* string away = 3; */
        if (message.away !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.away);
        /* int32 closed = 4; */
        if (message.closed !== 0)
            writer.tag(4, WireType.Varint).int32(message.closed);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index
 */
export const PopularLeagueMatches_Index = new PopularLeagueMatches_Index$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PopularLeagueMatches_Odds$Type extends MessageType<PopularLeagueMatches_Odds> {
    constructor() {
        super("ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Odds", [
            { no: 1, name: "asia", kind: "message", T: () => PopularLeagueMatches_Index },
            { no: 2, name: "eu", kind: "message", T: () => PopularLeagueMatches_Index },
            { no: 3, name: "bs", kind: "message", T: () => PopularLeagueMatches_Index },
            { no: 4, name: "cr", kind: "message", T: () => PopularLeagueMatches_Index }
        ]);
    }
    create(value?: PartialMessage<PopularLeagueMatches_Odds>): PopularLeagueMatches_Odds {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PopularLeagueMatches_Odds>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PopularLeagueMatches_Odds): PopularLeagueMatches_Odds {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index asia */ 1:
                    message.asia = PopularLeagueMatches_Index.internalBinaryRead(reader, reader.uint32(), options, message.asia);
                    break;
                case /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index eu */ 2:
                    message.eu = PopularLeagueMatches_Index.internalBinaryRead(reader, reader.uint32(), options, message.eu);
                    break;
                case /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index bs */ 3:
                    message.bs = PopularLeagueMatches_Index.internalBinaryRead(reader, reader.uint32(), options, message.bs);
                    break;
                case /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index cr */ 4:
                    message.cr = PopularLeagueMatches_Index.internalBinaryRead(reader, reader.uint32(), options, message.cr);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PopularLeagueMatches_Odds, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index asia = 1; */
        if (message.asia)
            PopularLeagueMatches_Index.internalBinaryWrite(message.asia, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index eu = 2; */
        if (message.eu)
            PopularLeagueMatches_Index.internalBinaryWrite(message.eu, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index bs = 3; */
        if (message.bs)
            PopularLeagueMatches_Index.internalBinaryWrite(message.bs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Index cr = 4; */
        if (message.cr)
            PopularLeagueMatches_Index.internalBinaryWrite(message.cr, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Odds
 */
export const PopularLeagueMatches_Odds = new PopularLeagueMatches_Odds$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PopularLeagueMatches_TgOdds$Type extends MessageType<PopularLeagueMatches_TgOdds> {
    constructor() {
        super("ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.TgOdds", [
            { no: 1, name: "transaction", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "profit", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "betMoney", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "isPopular", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "isSoldOut", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "selectionName", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<PopularLeagueMatches_TgOdds>): PopularLeagueMatches_TgOdds {
        const message = { transaction: "", profit: "", betMoney: "", isPopular: 0, isSoldOut: 0, selectionName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PopularLeagueMatches_TgOdds>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PopularLeagueMatches_TgOdds): PopularLeagueMatches_TgOdds {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string transaction */ 1:
                    message.transaction = reader.string();
                    break;
                case /* string profit */ 2:
                    message.profit = reader.string();
                    break;
                case /* string betMoney */ 3:
                    message.betMoney = reader.string();
                    break;
                case /* int32 isPopular */ 4:
                    message.isPopular = reader.int32();
                    break;
                case /* int32 isSoldOut */ 5:
                    message.isSoldOut = reader.int32();
                    break;
                case /* string selectionName */ 6:
                    message.selectionName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PopularLeagueMatches_TgOdds, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string transaction = 1; */
        if (message.transaction !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.transaction);
        /* string profit = 2; */
        if (message.profit !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.profit);
        /* string betMoney = 3; */
        if (message.betMoney !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.betMoney);
        /* int32 isPopular = 4; */
        if (message.isPopular !== 0)
            writer.tag(4, WireType.Varint).int32(message.isPopular);
        /* int32 isSoldOut = 5; */
        if (message.isSoldOut !== 0)
            writer.tag(5, WireType.Varint).int32(message.isSoldOut);
        /* string selectionName = 6; */
        if (message.selectionName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.selectionName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.TgOdds
 */
export const PopularLeagueMatches_TgOdds = new PopularLeagueMatches_TgOdds$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PopularLeagueMatches_Match$Type extends MessageType<PopularLeagueMatches_Match> {
    constructor() {
        super("ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Match", [
            { no: 1, name: "matchId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "openDate", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "startTime", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "homeId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "homeName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "homeScore", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "homeLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "awayId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "awayName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "awayScore", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "awayLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "neutral", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "odds", kind: "message", T: () => PopularLeagueMatches_Odds },
            { no: 15, name: "tgOdds", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PopularLeagueMatches_TgOdds }
        ]);
    }
    create(value?: PartialMessage<PopularLeagueMatches_Match>): PopularLeagueMatches_Match {
        const message = { matchId: 0, status: 0, openDate: 0, startTime: 0, homeId: 0, homeName: "", homeScore: 0, homeLogo: "", awayId: 0, awayName: "", awayScore: 0, awayLogo: "", neutral: 0, tgOdds: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PopularLeagueMatches_Match>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PopularLeagueMatches_Match): PopularLeagueMatches_Match {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 matchId */ 1:
                    message.matchId = reader.int32();
                    break;
                case /* int32 status */ 2:
                    message.status = reader.int32();
                    break;
                case /* int32 openDate */ 3:
                    message.openDate = reader.int32();
                    break;
                case /* int32 startTime */ 4:
                    message.startTime = reader.int32();
                    break;
                case /* int32 homeId */ 5:
                    message.homeId = reader.int32();
                    break;
                case /* string homeName */ 6:
                    message.homeName = reader.string();
                    break;
                case /* int32 homeScore */ 7:
                    message.homeScore = reader.int32();
                    break;
                case /* string homeLogo */ 8:
                    message.homeLogo = reader.string();
                    break;
                case /* int32 awayId */ 9:
                    message.awayId = reader.int32();
                    break;
                case /* string awayName */ 10:
                    message.awayName = reader.string();
                    break;
                case /* int32 awayScore */ 11:
                    message.awayScore = reader.int32();
                    break;
                case /* string awayLogo */ 12:
                    message.awayLogo = reader.string();
                    break;
                case /* int32 neutral */ 13:
                    message.neutral = reader.int32();
                    break;
                case /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Odds odds */ 14:
                    message.odds = PopularLeagueMatches_Odds.internalBinaryRead(reader, reader.uint32(), options, message.odds);
                    break;
                case /* repeated ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.TgOdds tgOdds */ 15:
                    message.tgOdds.push(PopularLeagueMatches_TgOdds.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PopularLeagueMatches_Match, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 matchId = 1; */
        if (message.matchId !== 0)
            writer.tag(1, WireType.Varint).int32(message.matchId);
        /* int32 status = 2; */
        if (message.status !== 0)
            writer.tag(2, WireType.Varint).int32(message.status);
        /* int32 openDate = 3; */
        if (message.openDate !== 0)
            writer.tag(3, WireType.Varint).int32(message.openDate);
        /* int32 startTime = 4; */
        if (message.startTime !== 0)
            writer.tag(4, WireType.Varint).int32(message.startTime);
        /* int32 homeId = 5; */
        if (message.homeId !== 0)
            writer.tag(5, WireType.Varint).int32(message.homeId);
        /* string homeName = 6; */
        if (message.homeName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.homeName);
        /* int32 homeScore = 7; */
        if (message.homeScore !== 0)
            writer.tag(7, WireType.Varint).int32(message.homeScore);
        /* string homeLogo = 8; */
        if (message.homeLogo !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.homeLogo);
        /* int32 awayId = 9; */
        if (message.awayId !== 0)
            writer.tag(9, WireType.Varint).int32(message.awayId);
        /* string awayName = 10; */
        if (message.awayName !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.awayName);
        /* int32 awayScore = 11; */
        if (message.awayScore !== 0)
            writer.tag(11, WireType.Varint).int32(message.awayScore);
        /* string awayLogo = 12; */
        if (message.awayLogo !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.awayLogo);
        /* int32 neutral = 13; */
        if (message.neutral !== 0)
            writer.tag(13, WireType.Varint).int32(message.neutral);
        /* ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Odds odds = 14; */
        if (message.odds)
            PopularLeagueMatches_Odds.internalBinaryWrite(message.odds, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.TgOdds tgOdds = 15; */
        for (let i = 0; i < message.tgOdds.length; i++)
            PopularLeagueMatches_TgOdds.internalBinaryWrite(message.tgOdds[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Popular.PopularLeaguesMatches.PopularLeagueMatches.Match
 */
export const PopularLeagueMatches_Match = new PopularLeagueMatches_Match$Type();
