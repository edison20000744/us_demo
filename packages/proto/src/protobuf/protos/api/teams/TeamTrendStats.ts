// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/teams/TeamTrendStats.proto" (package "ApiProtos.Teams.TrendStats", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats
 */
export interface TeamsTrendStats {
    /**
     * @generated from protobuf field: ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics statisticsData = 1;
     */
    statisticsData?: TeamsTrendStats_Statistics; // 比分統計資訊
    /**
     * @generated from protobuf field: ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics statisticsHalfScoreData = 2;
     */
    statisticsHalfScoreData?: TeamsTrendStats_Statistics; // 半場比分統計
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem winLostTables = 3;
     */
    winLostTables: TeamsTrendStats_WinlostItem[]; // 勝負平
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem asiaTables = 4;
     */
    asiaTables: TeamsTrendStats_WinlostItem[]; // 讓球
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.BigSmallItem goalBigSmall = 5;
     */
    goalBigSmall: TeamsTrendStats_BigSmallItem[]; // 總進球
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.HalfFullItem halfFull = 6;
     */
    halfFull: TeamsTrendStats_HalfFullItem[]; // 半全場
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalOddeven goalOddEven = 7;
     */
    goalOddEven: TeamsTrendStats_GoalOddeven[]; // 單雙
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalHomeAway goalHomeAway = 8;
     */
    goalHomeAway: TeamsTrendStats_GoalHomeAway[]; // 進球走勢
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.Cornerfoul cornerFoul = 9;
     */
    cornerFoul: TeamsTrendStats_Cornerfoul[]; // 角球罰牌
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.Team teams = 10;
     */
    teams: TeamsTrendStats_Team[]; // 球隊列表
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem
 */
export interface TeamsTrendStats_WinlostItem {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 win = 3;
     */
    win: number; // 勝
    /**
     * @generated from protobuf field: uint32 lost = 4;
     */
    lost: number; // 負
    /**
     * @generated from protobuf field: uint32 tie = 5;
     */
    tie: number; // 平
    /**
     * @generated from protobuf field: uint32 diff = 6;
     */
    diff: number; // 淨勝差
    /**
     * @generated from protobuf field: string winRate = 7;
     */
    winRate: string; // 勝率
    /**
     * @generated from protobuf field: string lostRate = 8;
     */
    lostRate: string; // 負率
    /**
     * @generated from protobuf field: string tieRate = 9;
     */
    tieRate: string; // 平率
    /**
     * @generated from protobuf field: string item = 10;
     */
    item: string; // 統計項目 total:總計 home:主場 away:客場
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.BigSmallItem
 */
export interface TeamsTrendStats_BigSmallItem {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 big = 3;
     */
    big: number; // 大
    /**
     * @generated from protobuf field: uint32 small = 4;
     */
    small: number; // 小
    /**
     * @generated from protobuf field: uint32 tie = 5;
     */
    tie: number; // 平
    /**
     * @generated from protobuf field: uint32 diff = 6;
     */
    diff: number; // 大淨勝
    /**
     * @generated from protobuf field: string bigRate = 7;
     */
    bigRate: string; // 大率
    /**
     * @generated from protobuf field: string smallRate = 8;
     */
    smallRate: string; // 小率
    /**
     * @generated from protobuf field: string tieRate = 9;
     */
    tieRate: string; // 平率
    /**
     * @generated from protobuf field: string item = 10;
     */
    item: string; // 統計項目 total:總計 home:主場 away:客場
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.HalfFullItem
 */
export interface TeamsTrendStats_HalfFullItem {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 winwin = 3;
     */
    winwin: number; // 勝勝
    /**
     * @generated from protobuf field: uint32 wintie = 4;
     */
    wintie: number; // 勝平
    /**
     * @generated from protobuf field: uint32 winlost = 5;
     */
    winlost: number; // 勝負
    /**
     * @generated from protobuf field: uint32 tiewin = 6;
     */
    tiewin: number; // 平勝
    /**
     * @generated from protobuf field: uint32 tietie = 7;
     */
    tietie: number; // 平平
    /**
     * @generated from protobuf field: uint32 tielost = 8;
     */
    tielost: number; // 平負
    /**
     * @generated from protobuf field: uint32 lostwin = 9;
     */
    lostwin: number; // 負勝
    /**
     * @generated from protobuf field: uint32 losttie = 10;
     */
    losttie: number; // 負平
    /**
     * @generated from protobuf field: uint32 lostlost = 11;
     */
    lostlost: number; // 負負
    /**
     * @generated from protobuf field: string item = 12;
     */
    item: string; // 統計項目 total:總計 home:主場 away:客場
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalOddeven
 */
export interface TeamsTrendStats_GoalOddeven {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 one = 3;
     */
    one: number; // 1球
    /**
     * @generated from protobuf field: uint32 two = 4;
     */
    two: number; // 2球
    /**
     * @generated from protobuf field: uint32 three = 5;
     */
    three: number; // 3球
    /**
     * @generated from protobuf field: uint32 four = 6;
     */
    four: number; // 4球
    /**
     * @generated from protobuf field: uint32 five = 7;
     */
    five: number; // 5球
    /**
     * @generated from protobuf field: uint32 six = 8;
     */
    six: number; // 6球
    /**
     * @generated from protobuf field: uint32 sevenOrMore = 9;
     */
    sevenOrMore: number; // 7球+
    /**
     * @generated from protobuf field: uint32 oddCount = 10;
     */
    oddCount: number; // 單
    /**
     * @generated from protobuf field: uint32 evenCount = 11;
     */
    evenCount: number; // 雙
    /**
     * @generated from protobuf field: string oddRate = 12;
     */
    oddRate: string; // 單率
    /**
     * @generated from protobuf field: string evenRate = 13;
     */
    evenRate: string; // 雙率
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalHomeAway
 */
export interface TeamsTrendStats_GoalHomeAway {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 goalGames = 3;
     */
    goalGames: number; // 進球場次
    /**
     * @generated from protobuf field: uint32 goalTotal = 4;
     */
    goalTotal: number; // 總進球
    /**
     * @generated from protobuf field: uint32 goalHome = 5;
     */
    goalHome: number; // 主場進球
    /**
     * @generated from protobuf field: uint32 goalAway = 6;
     */
    goalAway: number; // 客場進球
    /**
     * @generated from protobuf field: string goalAvg = 7;
     */
    goalAvg: string; // 場均進球
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.Cornerfoul
 */
export interface TeamsTrendStats_Cornerfoul {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 corner = 3;
     */
    corner: number; // 角球
    /**
     * @generated from protobuf field: string avgCorner = 4;
     */
    avgCorner: string; // 場均角球
    /**
     * @generated from protobuf field: uint32 foul = 5;
     */
    foul: number; // 罰牌
    /**
     * @generated from protobuf field: string avgFoul = 6;
     */
    avgFoul: string; // 場均罰牌
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.Team
 */
export interface TeamsTrendStats_Team {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 隊伍名稱
    /**
     * @generated from protobuf field: string shortName = 3;
     */
    shortName: string; // 隊伍縮寫名稱
    /**
     * @generated from protobuf field: string logo = 4;
     */
    logo: string; // 隊伍logo
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.SelectionInfo
 */
export interface TeamsTrendStats_SelectionInfo {
    /**
     * @generated from protobuf field: string selectionName = 1;
     */
    selectionName: string; // 整場選項名稱 (0-0 0-1 0-2 0-3 1-0 1-1 1-2 1-3 2-0 2-1 2-2 2-3 3-0 3-1 3-2 3-3 homeFourOrMore awayFourOrMore) 半場選項名稱 0-0 0-1 0-2 1-0 1-1 1-2 2-0 2-1 2-2 other
    /**
     * @generated from protobuf field: int32 appearCnt = 2;
     */
    appearCnt: number; // 出現次數
    /**
     * @generated from protobuf field: int32 notAppearCnt = 3;
     */
    notAppearCnt: number; // 未出現次數
    /**
     * @generated from protobuf field: string appearRate = 4;
     */
    appearRate: string; // 出現比率
    /**
     * @generated from protobuf field: string notAppearRate = 5;
     */
    notAppearRate: string; // 未出現比率
}
/**
 * @generated from protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics
 */
export interface TeamsTrendStats_Statistics {
    /**
     * @generated from protobuf field: uint32 total = 1;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.SelectionInfo selection = 2;
     */
    selection: TeamsTrendStats_SelectionInfo[]; // 比分統計項目
}
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats$Type extends MessageType<TeamsTrendStats> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats", [
            { no: 1, name: "statisticsData", kind: "message", T: () => TeamsTrendStats_Statistics },
            { no: 2, name: "statisticsHalfScoreData", kind: "message", T: () => TeamsTrendStats_Statistics },
            { no: 3, name: "winLostTables", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_WinlostItem },
            { no: 4, name: "asiaTables", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_WinlostItem },
            { no: 5, name: "goalBigSmall", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_BigSmallItem },
            { no: 6, name: "halfFull", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_HalfFullItem },
            { no: 7, name: "goalOddEven", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_GoalOddeven },
            { no: 8, name: "goalHomeAway", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_GoalHomeAway },
            { no: 9, name: "cornerFoul", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_Cornerfoul },
            { no: 10, name: "teams", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_Team }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats>): TeamsTrendStats {
        const message = { winLostTables: [], asiaTables: [], goalBigSmall: [], halfFull: [], goalOddEven: [], goalHomeAway: [], cornerFoul: [], teams: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats): TeamsTrendStats {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics statisticsData */ 1:
                    message.statisticsData = TeamsTrendStats_Statistics.internalBinaryRead(reader, reader.uint32(), options, message.statisticsData);
                    break;
                case /* ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics statisticsHalfScoreData */ 2:
                    message.statisticsHalfScoreData = TeamsTrendStats_Statistics.internalBinaryRead(reader, reader.uint32(), options, message.statisticsHalfScoreData);
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem winLostTables */ 3:
                    message.winLostTables.push(TeamsTrendStats_WinlostItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem asiaTables */ 4:
                    message.asiaTables.push(TeamsTrendStats_WinlostItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.BigSmallItem goalBigSmall */ 5:
                    message.goalBigSmall.push(TeamsTrendStats_BigSmallItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.HalfFullItem halfFull */ 6:
                    message.halfFull.push(TeamsTrendStats_HalfFullItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalOddeven goalOddEven */ 7:
                    message.goalOddEven.push(TeamsTrendStats_GoalOddeven.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalHomeAway goalHomeAway */ 8:
                    message.goalHomeAway.push(TeamsTrendStats_GoalHomeAway.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.Cornerfoul cornerFoul */ 9:
                    message.cornerFoul.push(TeamsTrendStats_Cornerfoul.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.Team teams */ 10:
                    message.teams.push(TeamsTrendStats_Team.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics statisticsData = 1; */
        if (message.statisticsData)
            TeamsTrendStats_Statistics.internalBinaryWrite(message.statisticsData, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics statisticsHalfScoreData = 2; */
        if (message.statisticsHalfScoreData)
            TeamsTrendStats_Statistics.internalBinaryWrite(message.statisticsHalfScoreData, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem winLostTables = 3; */
        for (let i = 0; i < message.winLostTables.length; i++)
            TeamsTrendStats_WinlostItem.internalBinaryWrite(message.winLostTables[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem asiaTables = 4; */
        for (let i = 0; i < message.asiaTables.length; i++)
            TeamsTrendStats_WinlostItem.internalBinaryWrite(message.asiaTables[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.BigSmallItem goalBigSmall = 5; */
        for (let i = 0; i < message.goalBigSmall.length; i++)
            TeamsTrendStats_BigSmallItem.internalBinaryWrite(message.goalBigSmall[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.HalfFullItem halfFull = 6; */
        for (let i = 0; i < message.halfFull.length; i++)
            TeamsTrendStats_HalfFullItem.internalBinaryWrite(message.halfFull[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalOddeven goalOddEven = 7; */
        for (let i = 0; i < message.goalOddEven.length; i++)
            TeamsTrendStats_GoalOddeven.internalBinaryWrite(message.goalOddEven[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalHomeAway goalHomeAway = 8; */
        for (let i = 0; i < message.goalHomeAway.length; i++)
            TeamsTrendStats_GoalHomeAway.internalBinaryWrite(message.goalHomeAway[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.Cornerfoul cornerFoul = 9; */
        for (let i = 0; i < message.cornerFoul.length; i++)
            TeamsTrendStats_Cornerfoul.internalBinaryWrite(message.cornerFoul[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.Team teams = 10; */
        for (let i = 0; i < message.teams.length; i++)
            TeamsTrendStats_Team.internalBinaryWrite(message.teams[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats
 */
export const TeamsTrendStats = new TeamsTrendStats$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_WinlostItem$Type extends MessageType<TeamsTrendStats_WinlostItem> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "win", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "lost", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "tie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "diff", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "winRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "lostRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "tieRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "item", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_WinlostItem>): TeamsTrendStats_WinlostItem {
        const message = { teamId: 0, total: 0, win: 0, lost: 0, tie: 0, diff: 0, winRate: "", lostRate: "", tieRate: "", item: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_WinlostItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_WinlostItem): TeamsTrendStats_WinlostItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 win */ 3:
                    message.win = reader.uint32();
                    break;
                case /* uint32 lost */ 4:
                    message.lost = reader.uint32();
                    break;
                case /* uint32 tie */ 5:
                    message.tie = reader.uint32();
                    break;
                case /* uint32 diff */ 6:
                    message.diff = reader.uint32();
                    break;
                case /* string winRate */ 7:
                    message.winRate = reader.string();
                    break;
                case /* string lostRate */ 8:
                    message.lostRate = reader.string();
                    break;
                case /* string tieRate */ 9:
                    message.tieRate = reader.string();
                    break;
                case /* string item */ 10:
                    message.item = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_WinlostItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 win = 3; */
        if (message.win !== 0)
            writer.tag(3, WireType.Varint).uint32(message.win);
        /* uint32 lost = 4; */
        if (message.lost !== 0)
            writer.tag(4, WireType.Varint).uint32(message.lost);
        /* uint32 tie = 5; */
        if (message.tie !== 0)
            writer.tag(5, WireType.Varint).uint32(message.tie);
        /* uint32 diff = 6; */
        if (message.diff !== 0)
            writer.tag(6, WireType.Varint).uint32(message.diff);
        /* string winRate = 7; */
        if (message.winRate !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.winRate);
        /* string lostRate = 8; */
        if (message.lostRate !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.lostRate);
        /* string tieRate = 9; */
        if (message.tieRate !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.tieRate);
        /* string item = 10; */
        if (message.item !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.item);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.WinlostItem
 */
export const TeamsTrendStats_WinlostItem = new TeamsTrendStats_WinlostItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_BigSmallItem$Type extends MessageType<TeamsTrendStats_BigSmallItem> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.BigSmallItem", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "big", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "small", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "tie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "diff", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "bigRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "smallRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "tieRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "item", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_BigSmallItem>): TeamsTrendStats_BigSmallItem {
        const message = { teamId: 0, total: 0, big: 0, small: 0, tie: 0, diff: 0, bigRate: "", smallRate: "", tieRate: "", item: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_BigSmallItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_BigSmallItem): TeamsTrendStats_BigSmallItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 big */ 3:
                    message.big = reader.uint32();
                    break;
                case /* uint32 small */ 4:
                    message.small = reader.uint32();
                    break;
                case /* uint32 tie */ 5:
                    message.tie = reader.uint32();
                    break;
                case /* uint32 diff */ 6:
                    message.diff = reader.uint32();
                    break;
                case /* string bigRate */ 7:
                    message.bigRate = reader.string();
                    break;
                case /* string smallRate */ 8:
                    message.smallRate = reader.string();
                    break;
                case /* string tieRate */ 9:
                    message.tieRate = reader.string();
                    break;
                case /* string item */ 10:
                    message.item = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_BigSmallItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 big = 3; */
        if (message.big !== 0)
            writer.tag(3, WireType.Varint).uint32(message.big);
        /* uint32 small = 4; */
        if (message.small !== 0)
            writer.tag(4, WireType.Varint).uint32(message.small);
        /* uint32 tie = 5; */
        if (message.tie !== 0)
            writer.tag(5, WireType.Varint).uint32(message.tie);
        /* uint32 diff = 6; */
        if (message.diff !== 0)
            writer.tag(6, WireType.Varint).uint32(message.diff);
        /* string bigRate = 7; */
        if (message.bigRate !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.bigRate);
        /* string smallRate = 8; */
        if (message.smallRate !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.smallRate);
        /* string tieRate = 9; */
        if (message.tieRate !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.tieRate);
        /* string item = 10; */
        if (message.item !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.item);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.BigSmallItem
 */
export const TeamsTrendStats_BigSmallItem = new TeamsTrendStats_BigSmallItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_HalfFullItem$Type extends MessageType<TeamsTrendStats_HalfFullItem> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.HalfFullItem", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "winwin", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "wintie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "winlost", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "tiewin", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "tietie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "tielost", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "lostwin", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "losttie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "lostlost", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "item", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_HalfFullItem>): TeamsTrendStats_HalfFullItem {
        const message = { teamId: 0, total: 0, winwin: 0, wintie: 0, winlost: 0, tiewin: 0, tietie: 0, tielost: 0, lostwin: 0, losttie: 0, lostlost: 0, item: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_HalfFullItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_HalfFullItem): TeamsTrendStats_HalfFullItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 winwin */ 3:
                    message.winwin = reader.uint32();
                    break;
                case /* uint32 wintie */ 4:
                    message.wintie = reader.uint32();
                    break;
                case /* uint32 winlost */ 5:
                    message.winlost = reader.uint32();
                    break;
                case /* uint32 tiewin */ 6:
                    message.tiewin = reader.uint32();
                    break;
                case /* uint32 tietie */ 7:
                    message.tietie = reader.uint32();
                    break;
                case /* uint32 tielost */ 8:
                    message.tielost = reader.uint32();
                    break;
                case /* uint32 lostwin */ 9:
                    message.lostwin = reader.uint32();
                    break;
                case /* uint32 losttie */ 10:
                    message.losttie = reader.uint32();
                    break;
                case /* uint32 lostlost */ 11:
                    message.lostlost = reader.uint32();
                    break;
                case /* string item */ 12:
                    message.item = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_HalfFullItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 winwin = 3; */
        if (message.winwin !== 0)
            writer.tag(3, WireType.Varint).uint32(message.winwin);
        /* uint32 wintie = 4; */
        if (message.wintie !== 0)
            writer.tag(4, WireType.Varint).uint32(message.wintie);
        /* uint32 winlost = 5; */
        if (message.winlost !== 0)
            writer.tag(5, WireType.Varint).uint32(message.winlost);
        /* uint32 tiewin = 6; */
        if (message.tiewin !== 0)
            writer.tag(6, WireType.Varint).uint32(message.tiewin);
        /* uint32 tietie = 7; */
        if (message.tietie !== 0)
            writer.tag(7, WireType.Varint).uint32(message.tietie);
        /* uint32 tielost = 8; */
        if (message.tielost !== 0)
            writer.tag(8, WireType.Varint).uint32(message.tielost);
        /* uint32 lostwin = 9; */
        if (message.lostwin !== 0)
            writer.tag(9, WireType.Varint).uint32(message.lostwin);
        /* uint32 losttie = 10; */
        if (message.losttie !== 0)
            writer.tag(10, WireType.Varint).uint32(message.losttie);
        /* uint32 lostlost = 11; */
        if (message.lostlost !== 0)
            writer.tag(11, WireType.Varint).uint32(message.lostlost);
        /* string item = 12; */
        if (message.item !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.item);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.HalfFullItem
 */
export const TeamsTrendStats_HalfFullItem = new TeamsTrendStats_HalfFullItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_GoalOddeven$Type extends MessageType<TeamsTrendStats_GoalOddeven> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalOddeven", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "one", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "two", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "three", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "four", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "five", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "six", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "sevenOrMore", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "oddCount", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "evenCount", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "oddRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "evenRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_GoalOddeven>): TeamsTrendStats_GoalOddeven {
        const message = { teamId: 0, total: 0, one: 0, two: 0, three: 0, four: 0, five: 0, six: 0, sevenOrMore: 0, oddCount: 0, evenCount: 0, oddRate: "", evenRate: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_GoalOddeven>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_GoalOddeven): TeamsTrendStats_GoalOddeven {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 one */ 3:
                    message.one = reader.uint32();
                    break;
                case /* uint32 two */ 4:
                    message.two = reader.uint32();
                    break;
                case /* uint32 three */ 5:
                    message.three = reader.uint32();
                    break;
                case /* uint32 four */ 6:
                    message.four = reader.uint32();
                    break;
                case /* uint32 five */ 7:
                    message.five = reader.uint32();
                    break;
                case /* uint32 six */ 8:
                    message.six = reader.uint32();
                    break;
                case /* uint32 sevenOrMore */ 9:
                    message.sevenOrMore = reader.uint32();
                    break;
                case /* uint32 oddCount */ 10:
                    message.oddCount = reader.uint32();
                    break;
                case /* uint32 evenCount */ 11:
                    message.evenCount = reader.uint32();
                    break;
                case /* string oddRate */ 12:
                    message.oddRate = reader.string();
                    break;
                case /* string evenRate */ 13:
                    message.evenRate = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_GoalOddeven, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 one = 3; */
        if (message.one !== 0)
            writer.tag(3, WireType.Varint).uint32(message.one);
        /* uint32 two = 4; */
        if (message.two !== 0)
            writer.tag(4, WireType.Varint).uint32(message.two);
        /* uint32 three = 5; */
        if (message.three !== 0)
            writer.tag(5, WireType.Varint).uint32(message.three);
        /* uint32 four = 6; */
        if (message.four !== 0)
            writer.tag(6, WireType.Varint).uint32(message.four);
        /* uint32 five = 7; */
        if (message.five !== 0)
            writer.tag(7, WireType.Varint).uint32(message.five);
        /* uint32 six = 8; */
        if (message.six !== 0)
            writer.tag(8, WireType.Varint).uint32(message.six);
        /* uint32 sevenOrMore = 9; */
        if (message.sevenOrMore !== 0)
            writer.tag(9, WireType.Varint).uint32(message.sevenOrMore);
        /* uint32 oddCount = 10; */
        if (message.oddCount !== 0)
            writer.tag(10, WireType.Varint).uint32(message.oddCount);
        /* uint32 evenCount = 11; */
        if (message.evenCount !== 0)
            writer.tag(11, WireType.Varint).uint32(message.evenCount);
        /* string oddRate = 12; */
        if (message.oddRate !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.oddRate);
        /* string evenRate = 13; */
        if (message.evenRate !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.evenRate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalOddeven
 */
export const TeamsTrendStats_GoalOddeven = new TeamsTrendStats_GoalOddeven$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_GoalHomeAway$Type extends MessageType<TeamsTrendStats_GoalHomeAway> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalHomeAway", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "goalGames", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "goalTotal", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "goalHome", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "goalAway", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "goalAvg", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_GoalHomeAway>): TeamsTrendStats_GoalHomeAway {
        const message = { teamId: 0, total: 0, goalGames: 0, goalTotal: 0, goalHome: 0, goalAway: 0, goalAvg: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_GoalHomeAway>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_GoalHomeAway): TeamsTrendStats_GoalHomeAway {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 goalGames */ 3:
                    message.goalGames = reader.uint32();
                    break;
                case /* uint32 goalTotal */ 4:
                    message.goalTotal = reader.uint32();
                    break;
                case /* uint32 goalHome */ 5:
                    message.goalHome = reader.uint32();
                    break;
                case /* uint32 goalAway */ 6:
                    message.goalAway = reader.uint32();
                    break;
                case /* string goalAvg */ 7:
                    message.goalAvg = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_GoalHomeAway, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 goalGames = 3; */
        if (message.goalGames !== 0)
            writer.tag(3, WireType.Varint).uint32(message.goalGames);
        /* uint32 goalTotal = 4; */
        if (message.goalTotal !== 0)
            writer.tag(4, WireType.Varint).uint32(message.goalTotal);
        /* uint32 goalHome = 5; */
        if (message.goalHome !== 0)
            writer.tag(5, WireType.Varint).uint32(message.goalHome);
        /* uint32 goalAway = 6; */
        if (message.goalAway !== 0)
            writer.tag(6, WireType.Varint).uint32(message.goalAway);
        /* string goalAvg = 7; */
        if (message.goalAvg !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.goalAvg);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.GoalHomeAway
 */
export const TeamsTrendStats_GoalHomeAway = new TeamsTrendStats_GoalHomeAway$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_Cornerfoul$Type extends MessageType<TeamsTrendStats_Cornerfoul> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.Cornerfoul", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "corner", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "avgCorner", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "foul", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "avgFoul", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_Cornerfoul>): TeamsTrendStats_Cornerfoul {
        const message = { teamId: 0, total: 0, corner: 0, avgCorner: "", foul: 0, avgFoul: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_Cornerfoul>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_Cornerfoul): TeamsTrendStats_Cornerfoul {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 corner */ 3:
                    message.corner = reader.uint32();
                    break;
                case /* string avgCorner */ 4:
                    message.avgCorner = reader.string();
                    break;
                case /* uint32 foul */ 5:
                    message.foul = reader.uint32();
                    break;
                case /* string avgFoul */ 6:
                    message.avgFoul = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_Cornerfoul, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 corner = 3; */
        if (message.corner !== 0)
            writer.tag(3, WireType.Varint).uint32(message.corner);
        /* string avgCorner = 4; */
        if (message.avgCorner !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.avgCorner);
        /* uint32 foul = 5; */
        if (message.foul !== 0)
            writer.tag(5, WireType.Varint).uint32(message.foul);
        /* string avgFoul = 6; */
        if (message.avgFoul !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.avgFoul);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.Cornerfoul
 */
export const TeamsTrendStats_Cornerfoul = new TeamsTrendStats_Cornerfoul$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_Team$Type extends MessageType<TeamsTrendStats_Team> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.Team", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "shortName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_Team>): TeamsTrendStats_Team {
        const message = { teamId: 0, name: "", shortName: "", logo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_Team>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_Team): TeamsTrendStats_Team {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string shortName */ 3:
                    message.shortName = reader.string();
                    break;
                case /* string logo */ 4:
                    message.logo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_Team, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string shortName = 3; */
        if (message.shortName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.shortName);
        /* string logo = 4; */
        if (message.logo !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.logo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.Team
 */
export const TeamsTrendStats_Team = new TeamsTrendStats_Team$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_SelectionInfo$Type extends MessageType<TeamsTrendStats_SelectionInfo> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.SelectionInfo", [
            { no: 1, name: "selectionName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "appearCnt", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "notAppearCnt", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "appearRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "notAppearRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_SelectionInfo>): TeamsTrendStats_SelectionInfo {
        const message = { selectionName: "", appearCnt: 0, notAppearCnt: 0, appearRate: "", notAppearRate: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_SelectionInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_SelectionInfo): TeamsTrendStats_SelectionInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string selectionName */ 1:
                    message.selectionName = reader.string();
                    break;
                case /* int32 appearCnt */ 2:
                    message.appearCnt = reader.int32();
                    break;
                case /* int32 notAppearCnt */ 3:
                    message.notAppearCnt = reader.int32();
                    break;
                case /* string appearRate */ 4:
                    message.appearRate = reader.string();
                    break;
                case /* string notAppearRate */ 5:
                    message.notAppearRate = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_SelectionInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string selectionName = 1; */
        if (message.selectionName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.selectionName);
        /* int32 appearCnt = 2; */
        if (message.appearCnt !== 0)
            writer.tag(2, WireType.Varint).int32(message.appearCnt);
        /* int32 notAppearCnt = 3; */
        if (message.notAppearCnt !== 0)
            writer.tag(3, WireType.Varint).int32(message.notAppearCnt);
        /* string appearRate = 4; */
        if (message.appearRate !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.appearRate);
        /* string notAppearRate = 5; */
        if (message.notAppearRate !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.notAppearRate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.SelectionInfo
 */
export const TeamsTrendStats_SelectionInfo = new TeamsTrendStats_SelectionInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamsTrendStats_Statistics$Type extends MessageType<TeamsTrendStats_Statistics> {
    constructor() {
        super("ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics", [
            { no: 1, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "selection", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TeamsTrendStats_SelectionInfo }
        ]);
    }
    create(value?: PartialMessage<TeamsTrendStats_Statistics>): TeamsTrendStats_Statistics {
        const message = { total: 0, selection: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamsTrendStats_Statistics>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamsTrendStats_Statistics): TeamsTrendStats_Statistics {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 total */ 1:
                    message.total = reader.uint32();
                    break;
                case /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.SelectionInfo selection */ 2:
                    message.selection.push(TeamsTrendStats_SelectionInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamsTrendStats_Statistics, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 total = 1; */
        if (message.total !== 0)
            writer.tag(1, WireType.Varint).uint32(message.total);
        /* repeated ApiProtos.Teams.TrendStats.TeamsTrendStats.SelectionInfo selection = 2; */
        for (let i = 0; i < message.selection.length; i++)
            TeamsTrendStats_SelectionInfo.internalBinaryWrite(message.selection[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Teams.TrendStats.TeamsTrendStats.Statistics
 */
export const TeamsTrendStats_Statistics = new TeamsTrendStats_Statistics$Type();
