// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/players/PlayersMatches.proto" (package "ApiProtos.Players.PlayersMatches", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { MatchesSchedule } from "../basic/MatchesData";
import { BasicInfo } from "../basic/BasicData";
/**
 * @generated from protobuf message ApiProtos.Players.PlayersMatches.PlayersMatches
 */
export interface PlayersMatches {
    /**
     * @generated from protobuf field: ApiProtos.Players.PlayersMatches.PlayersMatches.Matches matches = 1;
     */
    matches?: PlayersMatches_Matches; // 賽事資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Basic.BasicData.BasicInfo leagues = 2;
     */
    leagues: BasicInfo[]; // 聯盟資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Basic.BasicData.BasicInfo teams = 3;
     */
    teams: BasicInfo[]; // 球隊資訊
}
/**
 * @generated from protobuf message ApiProtos.Players.PlayersMatches.PlayersMatches.Matches
 */
export interface PlayersMatches_Matches {
    /**
     * @generated from protobuf field: repeated ApiProtos.Basic.MatchesData.MatchesSchedule pastMatches = 1;
     */
    pastMatches: MatchesSchedule[]; // 過去賽事資訊
    /**
     * @generated from protobuf field: string nextUrl = 2;
     */
    nextUrl: string; // 分頁連結
    /**
     * @generated from protobuf field: int32 totalPage = 3;
     */
    totalPage: number; // 總頁數
}
// @generated message type with reflection information, may provide speed optimized methods
class PlayersMatches$Type extends MessageType<PlayersMatches> {
    constructor() {
        super("ApiProtos.Players.PlayersMatches.PlayersMatches", [
            { no: 1, name: "matches", kind: "message", T: () => PlayersMatches_Matches },
            { no: 2, name: "leagues", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BasicInfo },
            { no: 3, name: "teams", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BasicInfo }
        ]);
    }
    create(value?: PartialMessage<PlayersMatches>): PlayersMatches {
        const message = { leagues: [], teams: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayersMatches>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayersMatches): PlayersMatches {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.Players.PlayersMatches.PlayersMatches.Matches matches */ 1:
                    message.matches = PlayersMatches_Matches.internalBinaryRead(reader, reader.uint32(), options, message.matches);
                    break;
                case /* repeated ApiProtos.Basic.BasicData.BasicInfo leagues */ 2:
                    message.leagues.push(BasicInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Basic.BasicData.BasicInfo teams */ 3:
                    message.teams.push(BasicInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayersMatches, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.Players.PlayersMatches.PlayersMatches.Matches matches = 1; */
        if (message.matches)
            PlayersMatches_Matches.internalBinaryWrite(message.matches, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Basic.BasicData.BasicInfo leagues = 2; */
        for (let i = 0; i < message.leagues.length; i++)
            BasicInfo.internalBinaryWrite(message.leagues[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Basic.BasicData.BasicInfo teams = 3; */
        for (let i = 0; i < message.teams.length; i++)
            BasicInfo.internalBinaryWrite(message.teams[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Players.PlayersMatches.PlayersMatches
 */
export const PlayersMatches = new PlayersMatches$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayersMatches_Matches$Type extends MessageType<PlayersMatches_Matches> {
    constructor() {
        super("ApiProtos.Players.PlayersMatches.PlayersMatches.Matches", [
            { no: 1, name: "pastMatches", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchesSchedule },
            { no: 2, name: "nextUrl", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "totalPage", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PlayersMatches_Matches>): PlayersMatches_Matches {
        const message = { pastMatches: [], nextUrl: "", totalPage: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayersMatches_Matches>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayersMatches_Matches): PlayersMatches_Matches {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Basic.MatchesData.MatchesSchedule pastMatches */ 1:
                    message.pastMatches.push(MatchesSchedule.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string nextUrl */ 2:
                    message.nextUrl = reader.string();
                    break;
                case /* int32 totalPage */ 3:
                    message.totalPage = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayersMatches_Matches, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Basic.MatchesData.MatchesSchedule pastMatches = 1; */
        for (let i = 0; i < message.pastMatches.length; i++)
            MatchesSchedule.internalBinaryWrite(message.pastMatches[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string nextUrl = 2; */
        if (message.nextUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextUrl);
        /* int32 totalPage = 3; */
        if (message.totalPage !== 0)
            writer.tag(3, WireType.Varint).int32(message.totalPage);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Players.PlayersMatches.PlayersMatches.Matches
 */
export const PlayersMatches_Matches = new PlayersMatches_Matches$Type();
