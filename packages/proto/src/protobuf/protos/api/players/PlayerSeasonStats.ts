// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/players/PlayerSeasonStats.proto" (package "ApiProtos.Players.PlayerSeasonStats", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats
 */
export interface PlayerSeasonStats {
    /**
     * @generated from protobuf field: repeated ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats.SeasonStats payload = 1;
     */
    payload: PlayerSeasonStats_SeasonStats[]; // 球員統計列表
}
/**
 * @generated from protobuf message ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats.SeasonStats
 */
export interface PlayerSeasonStats_SeasonStats {
    /**
     * @generated from protobuf field: string leagueName = 1;
     */
    leagueName: string;
    /**
     * @generated from protobuf field: repeated string columns = 2;
     */
    columns: string[];
    /**
     * @generated from protobuf field: repeated string rows = 3;
     */
    rows: string[];
}
// @generated message type with reflection information, may provide speed optimized methods
class PlayerSeasonStats$Type extends MessageType<PlayerSeasonStats> {
    constructor() {
        super("ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats", [
            { no: 1, name: "payload", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PlayerSeasonStats_SeasonStats }
        ]);
    }
    create(value?: PartialMessage<PlayerSeasonStats>): PlayerSeasonStats {
        const message = { payload: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerSeasonStats>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerSeasonStats): PlayerSeasonStats {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats.SeasonStats payload */ 1:
                    message.payload.push(PlayerSeasonStats_SeasonStats.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerSeasonStats, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats.SeasonStats payload = 1; */
        for (let i = 0; i < message.payload.length; i++)
            PlayerSeasonStats_SeasonStats.internalBinaryWrite(message.payload[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats
 */
export const PlayerSeasonStats = new PlayerSeasonStats$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerSeasonStats_SeasonStats$Type extends MessageType<PlayerSeasonStats_SeasonStats> {
    constructor() {
        super("ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats.SeasonStats", [
            { no: 1, name: "leagueName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "columns", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "rows", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerSeasonStats_SeasonStats>): PlayerSeasonStats_SeasonStats {
        const message = { leagueName: "", columns: [], rows: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerSeasonStats_SeasonStats>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerSeasonStats_SeasonStats): PlayerSeasonStats_SeasonStats {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string leagueName */ 1:
                    message.leagueName = reader.string();
                    break;
                case /* repeated string columns */ 2:
                    message.columns.push(reader.string());
                    break;
                case /* repeated string rows */ 3:
                    message.rows.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerSeasonStats_SeasonStats, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string leagueName = 1; */
        if (message.leagueName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.leagueName);
        /* repeated string columns = 2; */
        for (let i = 0; i < message.columns.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.columns[i]);
        /* repeated string rows = 3; */
        for (let i = 0; i < message.rows.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.rows[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Players.PlayerSeasonStats.PlayerSeasonStats.SeasonStats
 */
export const PlayerSeasonStats_SeasonStats = new PlayerSeasonStats_SeasonStats$Type();
