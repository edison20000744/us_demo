// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/matches/MatchStats.proto" (package "ApiProtos.Matches.MatchStats", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { MatchIncident } from "../../socket/MatchInfo";
/**
 * @generated from protobuf message ApiProtos.Matches.MatchStats.MatchStats
 */
export interface MatchStats {
    /**
     * @generated from protobuf field: int32 matchId = 1;
     */
    matchId: number; // 賽事ID
    /**
     * @generated from protobuf field: int32 homeId = 2;
     */
    homeId: number; // 主隊ID
    /**
     * @generated from protobuf field: int32 awayId = 3;
     */
    awayId: number; // 客隊ID
    /**
     * @generated from protobuf field: string homeName = 4;
     */
    homeName: string; // 主隊名稱
    /**
     * @generated from protobuf field: string homeLogo = 5;
     */
    homeLogo: string; // 主隊LOGO
    /**
     * @generated from protobuf field: string homeRank = 6;
     */
    homeRank: string; // 主隊排名
    /**
     * @generated from protobuf field: string awayName = 7;
     */
    awayName: string; // 客隊名稱
    /**
     * @generated from protobuf field: string awayLogo = 8;
     */
    awayLogo: string; // 客隊LOGO
    /**
     * @generated from protobuf field: string awayRank = 9;
     */
    awayRank: string; // 客隊排名
    /**
     * @generated from protobuf field: int32 neutral = 10;
     */
    neutral: number; // 是否為中立場
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchStats.MatchStats.Stats stats = 11;
     */
    stats: MatchStats_Stats[]; // 賽事統計資訊
    /**
     * @generated from protobuf field: socketProtos.MatchInfo.MatchIncident incidents = 12;
     */
    incidents?: MatchIncident; // 賽事重要事件
    /**
     * @generated from protobuf field: ApiProtos.Matches.MatchStats.MatchStats.RecentMatch recentMatches = 13;
     */
    recentMatches?: MatchStats_RecentMatch; // 主客近期最戰紀錄
    /**
     * @generated from protobuf field: ApiProtos.Matches.MatchStats.MatchStats.FutureMatch futureMatches = 14;
     */
    futureMatches?: MatchStats_FutureMatch; // 聯盟、主客近期未來賽事
}
/**
 * @generated from protobuf message ApiProtos.Matches.MatchStats.MatchStats.Stats
 */
export interface MatchStats_Stats {
    /**
     * @generated from protobuf field: int32 type = 1;
     */
    type: number; // 技术统计分類;詳見技术统计類別碼
    /**
     * @generated from protobuf field: int32 home = 2;
     */
    home: number; // 主隊分數
    /**
     * @generated from protobuf field: int32 away = 3;
     */
    away: number; // 客隊分數
}
/**
 * @generated from protobuf message ApiProtos.Matches.MatchStats.MatchStats.MatchResult
 */
export interface MatchStats_MatchResult {
    /**
     * @generated from protobuf field: int32 matchId = 1;
     */
    matchId: number; // 賽事ID
    /**
     * @generated from protobuf field: string result = 2;
     */
    result: string; // 賽果 win勝/tie平/lost負
}
/**
 * @generated from protobuf message ApiProtos.Matches.MatchStats.MatchStats.RecentMatch
 */
export interface MatchStats_RecentMatch {
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchStats.MatchStats.MatchResult home = 1;
     */
    home: MatchStats_MatchResult[]; // 主隊近期對戰資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchStats.MatchStats.MatchResult away = 2;
     */
    away: MatchStats_MatchResult[]; // 客隊近期對戰資訊
}
/**
 * @generated from protobuf message ApiProtos.Matches.MatchStats.MatchStats.MatchData
 */
export interface MatchStats_MatchData {
    /**
     * @generated from protobuf field: int32 matchId = 1;
     */
    matchId: number; // 賽事ID
    /**
     * @generated from protobuf field: int32 leagueId = 2;
     */
    leagueId: number; // 聯盟ID
    /**
     * @generated from protobuf field: string leagueName = 3;
     */
    leagueName: string; // 聯盟名稱
    /**
     * @generated from protobuf field: string leagueLogo = 4;
     */
    leagueLogo: string; // 聯盟LOGO
    /**
     * @generated from protobuf field: int32 homeId = 5;
     */
    homeId: number; // 主隊ID
    /**
     * @generated from protobuf field: string homeName = 6;
     */
    homeName: string; // 主隊名稱
    /**
     * @generated from protobuf field: string homeLogo = 7;
     */
    homeLogo: string; // 主隊LOGO
    /**
     * @generated from protobuf field: int32 homeScore = 8;
     */
    homeScore: number; // 主隊比分
    /**
     * @generated from protobuf field: int32 awayId = 9;
     */
    awayId: number; // 客隊ID
    /**
     * @generated from protobuf field: string awayName = 10;
     */
    awayName: string; // 客隊名稱
    /**
     * @generated from protobuf field: string awayLogo = 11;
     */
    awayLogo: string; // 客隊LOGO
    /**
     * @generated from protobuf field: int32 awayScore = 12;
     */
    awayScore: number; // 客隊比分
    /**
     * @generated from protobuf field: int32 openDate = 13;
     */
    openDate: number; // 開賽時間(timestamp)
    /**
     * @generated from protobuf field: int32 status = 14;
     */
    status: number; // 賽事狀態
}
/**
 * @generated from protobuf message ApiProtos.Matches.MatchStats.MatchStats.FutureMatch
 */
export interface MatchStats_FutureMatch {
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData leagueMatches = 1;
     */
    leagueMatches: MatchStats_MatchData[]; // 聯盟未來賽事
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData homeMatches = 2;
     */
    homeMatches: MatchStats_MatchData[]; // 主隊未來賽事
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData awayMatches = 3;
     */
    awayMatches: MatchStats_MatchData[]; // 客隊未來賽事
}
// @generated message type with reflection information, may provide speed optimized methods
class MatchStats$Type extends MessageType<MatchStats> {
    constructor() {
        super("ApiProtos.Matches.MatchStats.MatchStats", [
            { no: 1, name: "matchId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "homeId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "awayId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "homeName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "homeLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "homeRank", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "awayName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "awayLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "awayRank", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "neutral", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "stats", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchStats_Stats },
            { no: 12, name: "incidents", kind: "message", T: () => MatchIncident },
            { no: 13, name: "recentMatches", kind: "message", T: () => MatchStats_RecentMatch },
            { no: 14, name: "futureMatches", kind: "message", T: () => MatchStats_FutureMatch }
        ]);
    }
    create(value?: PartialMessage<MatchStats>): MatchStats {
        const message = { matchId: 0, homeId: 0, awayId: 0, homeName: "", homeLogo: "", homeRank: "", awayName: "", awayLogo: "", awayRank: "", neutral: 0, stats: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchStats>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchStats): MatchStats {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 matchId */ 1:
                    message.matchId = reader.int32();
                    break;
                case /* int32 homeId */ 2:
                    message.homeId = reader.int32();
                    break;
                case /* int32 awayId */ 3:
                    message.awayId = reader.int32();
                    break;
                case /* string homeName */ 4:
                    message.homeName = reader.string();
                    break;
                case /* string homeLogo */ 5:
                    message.homeLogo = reader.string();
                    break;
                case /* string homeRank */ 6:
                    message.homeRank = reader.string();
                    break;
                case /* string awayName */ 7:
                    message.awayName = reader.string();
                    break;
                case /* string awayLogo */ 8:
                    message.awayLogo = reader.string();
                    break;
                case /* string awayRank */ 9:
                    message.awayRank = reader.string();
                    break;
                case /* int32 neutral */ 10:
                    message.neutral = reader.int32();
                    break;
                case /* repeated ApiProtos.Matches.MatchStats.MatchStats.Stats stats */ 11:
                    message.stats.push(MatchStats_Stats.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* socketProtos.MatchInfo.MatchIncident incidents */ 12:
                    message.incidents = MatchIncident.internalBinaryRead(reader, reader.uint32(), options, message.incidents);
                    break;
                case /* ApiProtos.Matches.MatchStats.MatchStats.RecentMatch recentMatches */ 13:
                    message.recentMatches = MatchStats_RecentMatch.internalBinaryRead(reader, reader.uint32(), options, message.recentMatches);
                    break;
                case /* ApiProtos.Matches.MatchStats.MatchStats.FutureMatch futureMatches */ 14:
                    message.futureMatches = MatchStats_FutureMatch.internalBinaryRead(reader, reader.uint32(), options, message.futureMatches);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchStats, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 matchId = 1; */
        if (message.matchId !== 0)
            writer.tag(1, WireType.Varint).int32(message.matchId);
        /* int32 homeId = 2; */
        if (message.homeId !== 0)
            writer.tag(2, WireType.Varint).int32(message.homeId);
        /* int32 awayId = 3; */
        if (message.awayId !== 0)
            writer.tag(3, WireType.Varint).int32(message.awayId);
        /* string homeName = 4; */
        if (message.homeName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.homeName);
        /* string homeLogo = 5; */
        if (message.homeLogo !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.homeLogo);
        /* string homeRank = 6; */
        if (message.homeRank !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.homeRank);
        /* string awayName = 7; */
        if (message.awayName !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.awayName);
        /* string awayLogo = 8; */
        if (message.awayLogo !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.awayLogo);
        /* string awayRank = 9; */
        if (message.awayRank !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.awayRank);
        /* int32 neutral = 10; */
        if (message.neutral !== 0)
            writer.tag(10, WireType.Varint).int32(message.neutral);
        /* repeated ApiProtos.Matches.MatchStats.MatchStats.Stats stats = 11; */
        for (let i = 0; i < message.stats.length; i++)
            MatchStats_Stats.internalBinaryWrite(message.stats[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* socketProtos.MatchInfo.MatchIncident incidents = 12; */
        if (message.incidents)
            MatchIncident.internalBinaryWrite(message.incidents, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Matches.MatchStats.MatchStats.RecentMatch recentMatches = 13; */
        if (message.recentMatches)
            MatchStats_RecentMatch.internalBinaryWrite(message.recentMatches, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Matches.MatchStats.MatchStats.FutureMatch futureMatches = 14; */
        if (message.futureMatches)
            MatchStats_FutureMatch.internalBinaryWrite(message.futureMatches, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchStats.MatchStats
 */
export const MatchStats = new MatchStats$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchStats_Stats$Type extends MessageType<MatchStats_Stats> {
    constructor() {
        super("ApiProtos.Matches.MatchStats.MatchStats.Stats", [
            { no: 1, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "home", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "away", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<MatchStats_Stats>): MatchStats_Stats {
        const message = { type: 0, home: 0, away: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchStats_Stats>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchStats_Stats): MatchStats_Stats {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 type */ 1:
                    message.type = reader.int32();
                    break;
                case /* int32 home */ 2:
                    message.home = reader.int32();
                    break;
                case /* int32 away */ 3:
                    message.away = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchStats_Stats, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* int32 home = 2; */
        if (message.home !== 0)
            writer.tag(2, WireType.Varint).int32(message.home);
        /* int32 away = 3; */
        if (message.away !== 0)
            writer.tag(3, WireType.Varint).int32(message.away);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchStats.MatchStats.Stats
 */
export const MatchStats_Stats = new MatchStats_Stats$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchStats_MatchResult$Type extends MessageType<MatchStats_MatchResult> {
    constructor() {
        super("ApiProtos.Matches.MatchStats.MatchStats.MatchResult", [
            { no: 1, name: "matchId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "result", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<MatchStats_MatchResult>): MatchStats_MatchResult {
        const message = { matchId: 0, result: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchStats_MatchResult>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchStats_MatchResult): MatchStats_MatchResult {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 matchId */ 1:
                    message.matchId = reader.int32();
                    break;
                case /* string result */ 2:
                    message.result = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchStats_MatchResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 matchId = 1; */
        if (message.matchId !== 0)
            writer.tag(1, WireType.Varint).int32(message.matchId);
        /* string result = 2; */
        if (message.result !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.result);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchStats.MatchStats.MatchResult
 */
export const MatchStats_MatchResult = new MatchStats_MatchResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchStats_RecentMatch$Type extends MessageType<MatchStats_RecentMatch> {
    constructor() {
        super("ApiProtos.Matches.MatchStats.MatchStats.RecentMatch", [
            { no: 1, name: "home", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchStats_MatchResult },
            { no: 2, name: "away", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchStats_MatchResult }
        ]);
    }
    create(value?: PartialMessage<MatchStats_RecentMatch>): MatchStats_RecentMatch {
        const message = { home: [], away: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchStats_RecentMatch>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchStats_RecentMatch): MatchStats_RecentMatch {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchResult home */ 1:
                    message.home.push(MatchStats_MatchResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchResult away */ 2:
                    message.away.push(MatchStats_MatchResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchStats_RecentMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchResult home = 1; */
        for (let i = 0; i < message.home.length; i++)
            MatchStats_MatchResult.internalBinaryWrite(message.home[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchResult away = 2; */
        for (let i = 0; i < message.away.length; i++)
            MatchStats_MatchResult.internalBinaryWrite(message.away[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchStats.MatchStats.RecentMatch
 */
export const MatchStats_RecentMatch = new MatchStats_RecentMatch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchStats_MatchData$Type extends MessageType<MatchStats_MatchData> {
    constructor() {
        super("ApiProtos.Matches.MatchStats.MatchStats.MatchData", [
            { no: 1, name: "matchId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "leagueId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "leagueName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "leagueLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "homeId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "homeName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "homeLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "homeScore", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "awayId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "awayName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "awayLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "awayScore", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "openDate", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<MatchStats_MatchData>): MatchStats_MatchData {
        const message = { matchId: 0, leagueId: 0, leagueName: "", leagueLogo: "", homeId: 0, homeName: "", homeLogo: "", homeScore: 0, awayId: 0, awayName: "", awayLogo: "", awayScore: 0, openDate: 0, status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchStats_MatchData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchStats_MatchData): MatchStats_MatchData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 matchId */ 1:
                    message.matchId = reader.int32();
                    break;
                case /* int32 leagueId */ 2:
                    message.leagueId = reader.int32();
                    break;
                case /* string leagueName */ 3:
                    message.leagueName = reader.string();
                    break;
                case /* string leagueLogo */ 4:
                    message.leagueLogo = reader.string();
                    break;
                case /* int32 homeId */ 5:
                    message.homeId = reader.int32();
                    break;
                case /* string homeName */ 6:
                    message.homeName = reader.string();
                    break;
                case /* string homeLogo */ 7:
                    message.homeLogo = reader.string();
                    break;
                case /* int32 homeScore */ 8:
                    message.homeScore = reader.int32();
                    break;
                case /* int32 awayId */ 9:
                    message.awayId = reader.int32();
                    break;
                case /* string awayName */ 10:
                    message.awayName = reader.string();
                    break;
                case /* string awayLogo */ 11:
                    message.awayLogo = reader.string();
                    break;
                case /* int32 awayScore */ 12:
                    message.awayScore = reader.int32();
                    break;
                case /* int32 openDate */ 13:
                    message.openDate = reader.int32();
                    break;
                case /* int32 status */ 14:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchStats_MatchData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 matchId = 1; */
        if (message.matchId !== 0)
            writer.tag(1, WireType.Varint).int32(message.matchId);
        /* int32 leagueId = 2; */
        if (message.leagueId !== 0)
            writer.tag(2, WireType.Varint).int32(message.leagueId);
        /* string leagueName = 3; */
        if (message.leagueName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.leagueName);
        /* string leagueLogo = 4; */
        if (message.leagueLogo !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.leagueLogo);
        /* int32 homeId = 5; */
        if (message.homeId !== 0)
            writer.tag(5, WireType.Varint).int32(message.homeId);
        /* string homeName = 6; */
        if (message.homeName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.homeName);
        /* string homeLogo = 7; */
        if (message.homeLogo !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.homeLogo);
        /* int32 homeScore = 8; */
        if (message.homeScore !== 0)
            writer.tag(8, WireType.Varint).int32(message.homeScore);
        /* int32 awayId = 9; */
        if (message.awayId !== 0)
            writer.tag(9, WireType.Varint).int32(message.awayId);
        /* string awayName = 10; */
        if (message.awayName !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.awayName);
        /* string awayLogo = 11; */
        if (message.awayLogo !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.awayLogo);
        /* int32 awayScore = 12; */
        if (message.awayScore !== 0)
            writer.tag(12, WireType.Varint).int32(message.awayScore);
        /* int32 openDate = 13; */
        if (message.openDate !== 0)
            writer.tag(13, WireType.Varint).int32(message.openDate);
        /* int32 status = 14; */
        if (message.status !== 0)
            writer.tag(14, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchStats.MatchStats.MatchData
 */
export const MatchStats_MatchData = new MatchStats_MatchData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchStats_FutureMatch$Type extends MessageType<MatchStats_FutureMatch> {
    constructor() {
        super("ApiProtos.Matches.MatchStats.MatchStats.FutureMatch", [
            { no: 1, name: "leagueMatches", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchStats_MatchData },
            { no: 2, name: "homeMatches", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchStats_MatchData },
            { no: 3, name: "awayMatches", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchStats_MatchData }
        ]);
    }
    create(value?: PartialMessage<MatchStats_FutureMatch>): MatchStats_FutureMatch {
        const message = { leagueMatches: [], homeMatches: [], awayMatches: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchStats_FutureMatch>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchStats_FutureMatch): MatchStats_FutureMatch {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData leagueMatches */ 1:
                    message.leagueMatches.push(MatchStats_MatchData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData homeMatches */ 2:
                    message.homeMatches.push(MatchStats_MatchData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData awayMatches */ 3:
                    message.awayMatches.push(MatchStats_MatchData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchStats_FutureMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData leagueMatches = 1; */
        for (let i = 0; i < message.leagueMatches.length; i++)
            MatchStats_MatchData.internalBinaryWrite(message.leagueMatches[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData homeMatches = 2; */
        for (let i = 0; i < message.homeMatches.length; i++)
            MatchStats_MatchData.internalBinaryWrite(message.homeMatches[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Matches.MatchStats.MatchStats.MatchData awayMatches = 3; */
        for (let i = 0; i < message.awayMatches.length; i++)
            MatchStats_MatchData.internalBinaryWrite(message.awayMatches[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchStats.MatchStats.FutureMatch
 */
export const MatchStats_FutureMatch = new MatchStats_FutureMatch$Type();
