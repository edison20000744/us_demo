// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/matches/MatchGoalDistribution.proto" (package "ApiProtos.Matches.MatchGoalDistribution", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution
 */
export interface MatchGoalDistribution {
    /**
     * @generated from protobuf field: ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution home = 1;
     */
    home?: MatchGoalDistribution_Distribution; // 主隊進球分布
    /**
     * @generated from protobuf field: ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution away = 2;
     */
    away?: MatchGoalDistribution_Distribution; // 客隊進球分布
}
/**
 * @generated from protobuf message ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics
 */
export interface MatchGoalDistribution_Statistics {
    /**
     * @generated from protobuf field: int32 number = 1;
     */
    number: number; // 進球個數
    /**
     * @generated from protobuf field: int32 percentage = 2;
     */
    percentage: number; // 百分比
    /**
     * @generated from protobuf field: int32 startTime = 3;
     */
    startTime: number; // 開始時間（分鐘數）
    /**
     * @generated from protobuf field: int32 endTime = 4;
     */
    endTime: number; // 結束時間（分鐘數）
}
/**
 * @generated from protobuf message ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution
 */
export interface MatchGoalDistribution_Distribution {
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics home = 1;
     */
    home: MatchGoalDistribution_Statistics[]; // 主場統計
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics away = 2;
     */
    away: MatchGoalDistribution_Statistics[]; // 客場統計
    /**
     * @generated from protobuf field: repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics all = 3;
     */
    all: MatchGoalDistribution_Statistics[]; // 全部統計
}
// @generated message type with reflection information, may provide speed optimized methods
class MatchGoalDistribution$Type extends MessageType<MatchGoalDistribution> {
    constructor() {
        super("ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution", [
            { no: 1, name: "home", kind: "message", T: () => MatchGoalDistribution_Distribution },
            { no: 2, name: "away", kind: "message", T: () => MatchGoalDistribution_Distribution }
        ]);
    }
    create(value?: PartialMessage<MatchGoalDistribution>): MatchGoalDistribution {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchGoalDistribution>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchGoalDistribution): MatchGoalDistribution {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution home */ 1:
                    message.home = MatchGoalDistribution_Distribution.internalBinaryRead(reader, reader.uint32(), options, message.home);
                    break;
                case /* ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution away */ 2:
                    message.away = MatchGoalDistribution_Distribution.internalBinaryRead(reader, reader.uint32(), options, message.away);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchGoalDistribution, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution home = 1; */
        if (message.home)
            MatchGoalDistribution_Distribution.internalBinaryWrite(message.home, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution away = 2; */
        if (message.away)
            MatchGoalDistribution_Distribution.internalBinaryWrite(message.away, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution
 */
export const MatchGoalDistribution = new MatchGoalDistribution$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchGoalDistribution_Statistics$Type extends MessageType<MatchGoalDistribution_Statistics> {
    constructor() {
        super("ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics", [
            { no: 1, name: "number", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "percentage", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "startTime", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "endTime", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<MatchGoalDistribution_Statistics>): MatchGoalDistribution_Statistics {
        const message = { number: 0, percentage: 0, startTime: 0, endTime: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchGoalDistribution_Statistics>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchGoalDistribution_Statistics): MatchGoalDistribution_Statistics {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 number */ 1:
                    message.number = reader.int32();
                    break;
                case /* int32 percentage */ 2:
                    message.percentage = reader.int32();
                    break;
                case /* int32 startTime */ 3:
                    message.startTime = reader.int32();
                    break;
                case /* int32 endTime */ 4:
                    message.endTime = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchGoalDistribution_Statistics, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 number = 1; */
        if (message.number !== 0)
            writer.tag(1, WireType.Varint).int32(message.number);
        /* int32 percentage = 2; */
        if (message.percentage !== 0)
            writer.tag(2, WireType.Varint).int32(message.percentage);
        /* int32 startTime = 3; */
        if (message.startTime !== 0)
            writer.tag(3, WireType.Varint).int32(message.startTime);
        /* int32 endTime = 4; */
        if (message.endTime !== 0)
            writer.tag(4, WireType.Varint).int32(message.endTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics
 */
export const MatchGoalDistribution_Statistics = new MatchGoalDistribution_Statistics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchGoalDistribution_Distribution$Type extends MessageType<MatchGoalDistribution_Distribution> {
    constructor() {
        super("ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution", [
            { no: 1, name: "home", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchGoalDistribution_Statistics },
            { no: 2, name: "away", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchGoalDistribution_Statistics },
            { no: 3, name: "all", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchGoalDistribution_Statistics }
        ]);
    }
    create(value?: PartialMessage<MatchGoalDistribution_Distribution>): MatchGoalDistribution_Distribution {
        const message = { home: [], away: [], all: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MatchGoalDistribution_Distribution>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MatchGoalDistribution_Distribution): MatchGoalDistribution_Distribution {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics home */ 1:
                    message.home.push(MatchGoalDistribution_Statistics.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics away */ 2:
                    message.away.push(MatchGoalDistribution_Statistics.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics all */ 3:
                    message.all.push(MatchGoalDistribution_Statistics.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MatchGoalDistribution_Distribution, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics home = 1; */
        for (let i = 0; i < message.home.length; i++)
            MatchGoalDistribution_Statistics.internalBinaryWrite(message.home[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics away = 2; */
        for (let i = 0; i < message.away.length; i++)
            MatchGoalDistribution_Statistics.internalBinaryWrite(message.away[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Statistics all = 3; */
        for (let i = 0; i < message.all.length; i++)
            MatchGoalDistribution_Statistics.internalBinaryWrite(message.all[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Matches.MatchGoalDistribution.MatchGoalDistribution.Distribution
 */
export const MatchGoalDistribution_Distribution = new MatchGoalDistribution_Distribution$Type();
