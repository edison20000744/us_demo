// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/leagues/LeaguesDetail.proto" (package "ApiProtos.Leagues.LeaguesDetail", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail
 */
export interface LeaguesDetail {
    /**
     * @generated from protobuf field: int32 leagueId = 1;
     */
    leagueId: number; // 聯盟ID
    /**
     * @generated from protobuf field: int32 leagueType = 2;
     */
    leagueType: number; // 聯盟種類
    /**
     * @generated from protobuf field: string leagueName = 3;
     */
    leagueName: string; // 聯盟名稱
    /**
     * @generated from protobuf field: string leagueLogo = 4;
     */
    leagueLogo: string; // 聯盟LOGO
    /**
     * @generated from protobuf field: int32 areaId = 5;
     */
    areaId: number; // 區域ID
    /**
     * @generated from protobuf field: string areaName = 6;
     */
    areaName: string; // 區域名稱
    /**
     * @generated from protobuf field: int32 countryId = 7;
     */
    countryId: number; // 國家ID
    /**
     * @generated from protobuf field: string countryName = 8;
     */
    countryName: string; // 國家名稱
    /**
     * @generated from protobuf field: int32 curSeasonId = 9;
     */
    curSeasonId: number; // 當前賽季ID
    /**
     * @generated from protobuf field: int32 curStageId = 10;
     */
    curStageId: number; // 當前階段ID
    /**
     * @generated from protobuf field: int32 curRound = 11;
     */
    curRound: number; // 當前輪次
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Season seasons = 12;
     */
    seasons: LeaguesDetail_Season[]; // 賽季資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Stage stages = 13;
     */
    stages: LeaguesDetail_Stage[]; // 階段資訊
    /**
     * @generated from protobuf field: ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Info info = 14;
     */
    info?: LeaguesDetail_Info; // 基本資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Match matches = 15;
     */
    matches: LeaguesDetail_Match[]; // 賽事資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.BestLineup bestLineup = 16;
     */
    bestLineup: LeaguesDetail_BestLineup[]; // 陣容資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Team teams = 17;
     */
    teams: LeaguesDetail_Team[]; // 隊伍資訊
    /**
     * @generated from protobuf field: ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Table tables = 18;
     */
    tables?: LeaguesDetail_Table; // 積分資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.ShooterRank shooterRank = 19;
     */
    shooterRank: LeaguesDetail_ShooterRank[]; // 射手榜
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Player players = 20;
     */
    players: LeaguesDetail_Player[]; // 球員資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MarketValueRank marketValueRank = 21;
     */
    marketValueRank: LeaguesDetail_MarketValueRank[]; // 市值榜
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Season
 */
export interface LeaguesDetail_Season {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 賽季id
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 賽季名稱
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Stage
 */
export interface LeaguesDetail_Stage {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 階段id
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 階段名稱
    /**
     * @generated from protobuf field: int32 mode = 3;
     */
    mode: number; // 階段模式
    /**
     * @generated from protobuf field: int32 groupCount = 4;
     */
    groupCount: number; // 總組數
    /**
     * @generated from protobuf field: int32 roundCount = 5;
     */
    roundCount: number; // 總倫次
    /**
     * @generated from protobuf field: int32 order = 6;
     */
    order: number; // 排序
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Statistics
 */
export interface LeaguesDetail_Statistics {
    /**
     * @generated from protobuf field: int32 leagueLevel = 1;
     */
    leagueLevel: number; // 聯盟等級
    /**
     * @generated from protobuf field: int32 conventionalRound = 2;
     */
    conventionalRound: number; // 常規輪次
    /**
     * @generated from protobuf field: int32 participateTeam = 3;
     */
    participateTeam: number; // 參與隊伍數量
    /**
     * @generated from protobuf field: int32 participatePlayer = 4;
     */
    participatePlayer: number; // 參與球員數量
    /**
     * @generated from protobuf field: string marketValue = 5;
     */
    marketValue: string; // 市值
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.RelationLeague
 */
export interface LeaguesDetail_RelationLeague {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 聯盟ID
    /**
     * @generated from protobuf field: int32 type = 2;
     */
    type: number; // 種類
    /**
     * @generated from protobuf field: string name = 3;
     */
    name: string; // 名稱
    /**
     * @generated from protobuf field: string logo = 4;
     */
    logo: string; // LOGO
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Info
 */
export interface LeaguesDetail_Info {
    /**
     * @generated from protobuf field: ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Statistics statistics = 1;
     */
    statistics?: LeaguesDetail_Statistics; // 統計資訊
    /**
     * @generated from protobuf field: repeated int32 upgradeTeams = 2;
     */
    upgradeTeams: number[]; // 生斑馬
    /**
     * @generated from protobuf field: repeated int32 downgradeTeams = 3;
     */
    downgradeTeams: number[]; // 降斑馬
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.RelationLeague relationLeagues = 4;
     */
    relationLeagues: LeaguesDetail_RelationLeague[]; // 關聯聯盟
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MatchData
 */
export interface LeaguesDetail_MatchData {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 賽事ID
    /**
     * @generated from protobuf field: int32 homeId = 2;
     */
    homeId: number; // 主隊ID
    /**
     * @generated from protobuf field: int32 awayId = 3;
     */
    awayId: number; // 客隊ID
    /**
     * @generated from protobuf field: int32 openDate = 4;
     */
    openDate: number; // 開賽時間
    /**
     * @generated from protobuf field: int32 startTime = 5;
     */
    startTime: number; // 開球時間
    /**
     * @generated from protobuf field: int32 homeScore = 6;
     */
    homeScore: number; // 主隊比分
    /**
     * @generated from protobuf field: int32 awayScore = 7;
     */
    awayScore: number; // 客隊比分
    /**
     * @generated from protobuf field: int32 homeHalfScore = 8;
     */
    homeHalfScore: number; // 主隊半場比分
    /**
     * @generated from protobuf field: int32 awayHalfScore = 9;
     */
    awayHalfScore: number; // 客隊半場比分
    /**
     * @generated from protobuf field: int32 homeCorner = 10;
     */
    homeCorner: number; // 主隊角球數量
    /**
     * @generated from protobuf field: int32 awayCorner = 11;
     */
    awayCorner: number; // 客隊角球數量
    /**
     * @generated from protobuf field: int32 homePenalty = 12;
     */
    homePenalty: number; // 主隊點球比分
    /**
     * @generated from protobuf field: int32 awayPenalty = 13;
     */
    awayPenalty: number; // 客隊點球比分
    /**
     * @generated from protobuf field: int32 homeExtend = 14;
     */
    homeExtend: number; // 主隊延長賽比分
    /**
     * @generated from protobuf field: int32 awayExtend = 15;
     */
    awayExtend: number; // 客隊延長賽比分
    /**
     * @generated from protobuf field: int32 status = 16;
     */
    status: number; // 賽事狀態
    /**
     * @generated from protobuf field: string note = 17;
     */
    note: string; // 備註
    /**
     * @generated from protobuf field: int32 neutral = 18;
     */
    neutral: number; // 是否為中立場
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Row
 */
export interface LeaguesDetail_Row {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string; // 名稱
    /**
     * @generated from protobuf field: string homeScore = 2;
     */
    homeScore: string; // 回合制賽事主隊加總比分，非回合制為空字串''
    /**
     * @generated from protobuf field: string awayScore = 3;
     */
    awayScore: string; // 回合制賽事客隊加總比分，非回合制為空字串''
    /**
     * @generated from protobuf field: string homeName = 4;
     */
    homeName: string; // 回合制賽事主隊加總比分，非回合制為空字串''
    /**
     * @generated from protobuf field: string awayName = 5;
     */
    awayName: string; // 回合制賽事客隊加總比分，非回合制為空字串''
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MatchData data = 6;
     */
    data: LeaguesDetail_MatchData[]; // 賽事資訊
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Match
 */
export interface LeaguesDetail_Match {
    /**
     * @generated from protobuf field: int32 stageId = 1;
     */
    stageId: number; // 階段ID
    /**
     * @generated from protobuf field: string type = 2;
     */
    type: string; // 總類
    /**
     * @generated from protobuf field: int32 isRoundBattle = 3;
     */
    isRoundBattle: number; // 是否為回事制 0否 1是
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Row rows = 4;
     */
    rows: LeaguesDetail_Row[]; // 賽事資訊
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.LineupDetail
 */
export interface LeaguesDetail_LineupDetail {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 球員ID
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 球員名稱
    /**
     * @generated from protobuf field: string logo = 3;
     */
    logo: string; // 球員LOGO
    /**
     * @generated from protobuf field: string rating = 4;
     */
    rating: string; // 球員評分
    /**
     * @generated from protobuf field: int32 locationX = 5;
     */
    locationX: number; // 球員座標X
    /**
     * @generated from protobuf field: int32 locationY = 6;
     */
    locationY: number; // 球員座標Y
    /**
     * @generated from protobuf field: string position = 7;
     */
    position: string; // 球員位置
    /**
     * @generated from protobuf field: int32 teamId = 8;
     */
    teamId: number; // 球隊ID
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.BestLineup
 */
export interface LeaguesDetail_BestLineup {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 最佳陣容ID
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 最佳陣容名稱
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.LineupDetail detail = 3;
     */
    detail: LeaguesDetail_LineupDetail[]; // 最佳陣容詳情
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Team
 */
export interface LeaguesDetail_Team {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 球隊ID
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 球隊名稱
    /**
     * @generated from protobuf field: string logo = 3;
     */
    logo: string; // 球隊LOGO
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Promotion
 */
export interface LeaguesDetail_Promotion {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 備註ID
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 備註名稱
    /**
     * @generated from protobuf field: string color = 3;
     */
    color: string; // 備註顏色
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRows
 */
export interface LeaguesDetail_TableRows {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 積分榜ID
    /**
     * @generated from protobuf field: int32 promotionId = 2;
     */
    promotionId: number; // 備註ID
    /**
     * @generated from protobuf field: int32 points = 3;
     */
    points: number; // 積分點數
    /**
     * @generated from protobuf field: int32 position = 4;
     */
    position: number; // 積分排名
    /**
     * @generated from protobuf field: int32 total = 5;
     */
    total: number; // 總場數
    /**
     * @generated from protobuf field: int32 won = 6;
     */
    won: number; // 勝場數
    /**
     * @generated from protobuf field: int32 draw = 7;
     */
    draw: number; // 平場數
    /**
     * @generated from protobuf field: int32 loss = 8;
     */
    loss: number; // 敗場數
    /**
     * @generated from protobuf field: int32 goals = 9;
     */
    goals: number; // 進球數
    /**
     * @generated from protobuf field: int32 goalsAgainst = 10;
     */
    goalsAgainst: number; // 失球數
    /**
     * @generated from protobuf field: int32 goalDiff = 11;
     */
    goalDiff: number; // 進球差
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableData
 */
export interface LeaguesDetail_TableData {
    /**
     * @generated from protobuf field: string group = 1;
     */
    group: string; // 分組名稱
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRows rows = 2;
     */
    rows: LeaguesDetail_TableRows[]; // 積分資訊
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRank
 */
export interface LeaguesDetail_TableRank {
    /**
     * @generated from protobuf field: int32 stageId = 1;
     */
    stageId: number; // 階段ID
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableData data = 2;
     */
    data: LeaguesDetail_TableData[]; // 積分資訊
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Table
 */
export interface LeaguesDetail_Table {
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Promotion promotions = 1;
     */
    promotions: LeaguesDetail_Promotion[]; // 備註資訊
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRank rank = 2;
     */
    rank: LeaguesDetail_TableRank[]; // 積分資訊
    /**
     * @generated from protobuf field: string rule = 3;
     */
    rule: string; // 賽季積分規則
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.ShooterRank
 */
export interface LeaguesDetail_ShooterRank {
    /**
     * @generated from protobuf field: int32 playerId = 1;
     */
    playerId: number; // 球員ID
    /**
     * @generated from protobuf field: int32 teamId = 2;
     */
    teamId: number; // 球隊ID
    /**
     * @generated from protobuf field: int32 position = 3;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: int32 total = 4;
     */
    total: number; // 進球數
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Player
 */
export interface LeaguesDetail_Player {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 球員ID
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 球員ID
    /**
     * @generated from protobuf field: string logo = 3;
     */
    logo: string; // 球員LOGO
    /**
     * @generated from protobuf field: int32 teamId = 4;
     */
    teamId: number; // 球隊ID
}
/**
 * @generated from protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MarketValueRank
 */
export interface LeaguesDetail_MarketValueRank {
    /**
     * @generated from protobuf field: int32 playerId = 1;
     */
    playerId: number; // 球員ID
    /**
     * @generated from protobuf field: int32 position = 2;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: int32 total = 3;
     */
    total: number; // 市值(int)
    /**
     * @generated from protobuf field: string marketValue = 4;
     */
    marketValue: string; // 市值(已轉換)
    /**
     * @generated from protobuf field: int32 teamId = 5;
     */
    teamId: number; // 球隊ID
}
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail$Type extends MessageType<LeaguesDetail> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail", [
            { no: 1, name: "leagueId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "leagueType", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "leagueName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "leagueLogo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "areaId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "areaName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "countryId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "countryName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "curSeasonId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "curStageId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "curRound", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "seasons", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_Season },
            { no: 13, name: "stages", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_Stage },
            { no: 14, name: "info", kind: "message", T: () => LeaguesDetail_Info },
            { no: 15, name: "matches", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_Match },
            { no: 16, name: "bestLineup", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_BestLineup },
            { no: 17, name: "teams", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_Team },
            { no: 18, name: "tables", kind: "message", T: () => LeaguesDetail_Table },
            { no: 19, name: "shooterRank", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_ShooterRank },
            { no: 20, name: "players", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_Player },
            { no: 21, name: "marketValueRank", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_MarketValueRank }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail>): LeaguesDetail {
        const message = { leagueId: 0, leagueType: 0, leagueName: "", leagueLogo: "", areaId: 0, areaName: "", countryId: 0, countryName: "", curSeasonId: 0, curStageId: 0, curRound: 0, seasons: [], stages: [], matches: [], bestLineup: [], teams: [], shooterRank: [], players: [], marketValueRank: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail): LeaguesDetail {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 leagueId */ 1:
                    message.leagueId = reader.int32();
                    break;
                case /* int32 leagueType */ 2:
                    message.leagueType = reader.int32();
                    break;
                case /* string leagueName */ 3:
                    message.leagueName = reader.string();
                    break;
                case /* string leagueLogo */ 4:
                    message.leagueLogo = reader.string();
                    break;
                case /* int32 areaId */ 5:
                    message.areaId = reader.int32();
                    break;
                case /* string areaName */ 6:
                    message.areaName = reader.string();
                    break;
                case /* int32 countryId */ 7:
                    message.countryId = reader.int32();
                    break;
                case /* string countryName */ 8:
                    message.countryName = reader.string();
                    break;
                case /* int32 curSeasonId */ 9:
                    message.curSeasonId = reader.int32();
                    break;
                case /* int32 curStageId */ 10:
                    message.curStageId = reader.int32();
                    break;
                case /* int32 curRound */ 11:
                    message.curRound = reader.int32();
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Season seasons */ 12:
                    message.seasons.push(LeaguesDetail_Season.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Stage stages */ 13:
                    message.stages.push(LeaguesDetail_Stage.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Info info */ 14:
                    message.info = LeaguesDetail_Info.internalBinaryRead(reader, reader.uint32(), options, message.info);
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Match matches */ 15:
                    message.matches.push(LeaguesDetail_Match.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.BestLineup bestLineup */ 16:
                    message.bestLineup.push(LeaguesDetail_BestLineup.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Team teams */ 17:
                    message.teams.push(LeaguesDetail_Team.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Table tables */ 18:
                    message.tables = LeaguesDetail_Table.internalBinaryRead(reader, reader.uint32(), options, message.tables);
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.ShooterRank shooterRank */ 19:
                    message.shooterRank.push(LeaguesDetail_ShooterRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Player players */ 20:
                    message.players.push(LeaguesDetail_Player.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MarketValueRank marketValueRank */ 21:
                    message.marketValueRank.push(LeaguesDetail_MarketValueRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 leagueId = 1; */
        if (message.leagueId !== 0)
            writer.tag(1, WireType.Varint).int32(message.leagueId);
        /* int32 leagueType = 2; */
        if (message.leagueType !== 0)
            writer.tag(2, WireType.Varint).int32(message.leagueType);
        /* string leagueName = 3; */
        if (message.leagueName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.leagueName);
        /* string leagueLogo = 4; */
        if (message.leagueLogo !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.leagueLogo);
        /* int32 areaId = 5; */
        if (message.areaId !== 0)
            writer.tag(5, WireType.Varint).int32(message.areaId);
        /* string areaName = 6; */
        if (message.areaName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.areaName);
        /* int32 countryId = 7; */
        if (message.countryId !== 0)
            writer.tag(7, WireType.Varint).int32(message.countryId);
        /* string countryName = 8; */
        if (message.countryName !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.countryName);
        /* int32 curSeasonId = 9; */
        if (message.curSeasonId !== 0)
            writer.tag(9, WireType.Varint).int32(message.curSeasonId);
        /* int32 curStageId = 10; */
        if (message.curStageId !== 0)
            writer.tag(10, WireType.Varint).int32(message.curStageId);
        /* int32 curRound = 11; */
        if (message.curRound !== 0)
            writer.tag(11, WireType.Varint).int32(message.curRound);
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Season seasons = 12; */
        for (let i = 0; i < message.seasons.length; i++)
            LeaguesDetail_Season.internalBinaryWrite(message.seasons[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Stage stages = 13; */
        for (let i = 0; i < message.stages.length; i++)
            LeaguesDetail_Stage.internalBinaryWrite(message.stages[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Info info = 14; */
        if (message.info)
            LeaguesDetail_Info.internalBinaryWrite(message.info, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Match matches = 15; */
        for (let i = 0; i < message.matches.length; i++)
            LeaguesDetail_Match.internalBinaryWrite(message.matches[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.BestLineup bestLineup = 16; */
        for (let i = 0; i < message.bestLineup.length; i++)
            LeaguesDetail_BestLineup.internalBinaryWrite(message.bestLineup[i], writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Team teams = 17; */
        for (let i = 0; i < message.teams.length; i++)
            LeaguesDetail_Team.internalBinaryWrite(message.teams[i], writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Table tables = 18; */
        if (message.tables)
            LeaguesDetail_Table.internalBinaryWrite(message.tables, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.ShooterRank shooterRank = 19; */
        for (let i = 0; i < message.shooterRank.length; i++)
            LeaguesDetail_ShooterRank.internalBinaryWrite(message.shooterRank[i], writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Player players = 20; */
        for (let i = 0; i < message.players.length; i++)
            LeaguesDetail_Player.internalBinaryWrite(message.players[i], writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MarketValueRank marketValueRank = 21; */
        for (let i = 0; i < message.marketValueRank.length; i++)
            LeaguesDetail_MarketValueRank.internalBinaryWrite(message.marketValueRank[i], writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail
 */
export const LeaguesDetail = new LeaguesDetail$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Season$Type extends MessageType<LeaguesDetail_Season> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Season", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Season>): LeaguesDetail_Season {
        const message = { id: 0, name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Season>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Season): LeaguesDetail_Season {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Season, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Season
 */
export const LeaguesDetail_Season = new LeaguesDetail_Season$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Stage$Type extends MessageType<LeaguesDetail_Stage> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Stage", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "mode", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "groupCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "roundCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "order", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Stage>): LeaguesDetail_Stage {
        const message = { id: 0, name: "", mode: 0, groupCount: 0, roundCount: 0, order: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Stage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Stage): LeaguesDetail_Stage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* int32 mode */ 3:
                    message.mode = reader.int32();
                    break;
                case /* int32 groupCount */ 4:
                    message.groupCount = reader.int32();
                    break;
                case /* int32 roundCount */ 5:
                    message.roundCount = reader.int32();
                    break;
                case /* int32 order */ 6:
                    message.order = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Stage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* int32 mode = 3; */
        if (message.mode !== 0)
            writer.tag(3, WireType.Varint).int32(message.mode);
        /* int32 groupCount = 4; */
        if (message.groupCount !== 0)
            writer.tag(4, WireType.Varint).int32(message.groupCount);
        /* int32 roundCount = 5; */
        if (message.roundCount !== 0)
            writer.tag(5, WireType.Varint).int32(message.roundCount);
        /* int32 order = 6; */
        if (message.order !== 0)
            writer.tag(6, WireType.Varint).int32(message.order);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Stage
 */
export const LeaguesDetail_Stage = new LeaguesDetail_Stage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Statistics$Type extends MessageType<LeaguesDetail_Statistics> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Statistics", [
            { no: 1, name: "leagueLevel", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "conventionalRound", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "participateTeam", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "participatePlayer", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "marketValue", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Statistics>): LeaguesDetail_Statistics {
        const message = { leagueLevel: 0, conventionalRound: 0, participateTeam: 0, participatePlayer: 0, marketValue: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Statistics>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Statistics): LeaguesDetail_Statistics {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 leagueLevel */ 1:
                    message.leagueLevel = reader.int32();
                    break;
                case /* int32 conventionalRound */ 2:
                    message.conventionalRound = reader.int32();
                    break;
                case /* int32 participateTeam */ 3:
                    message.participateTeam = reader.int32();
                    break;
                case /* int32 participatePlayer */ 4:
                    message.participatePlayer = reader.int32();
                    break;
                case /* string marketValue */ 5:
                    message.marketValue = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Statistics, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 leagueLevel = 1; */
        if (message.leagueLevel !== 0)
            writer.tag(1, WireType.Varint).int32(message.leagueLevel);
        /* int32 conventionalRound = 2; */
        if (message.conventionalRound !== 0)
            writer.tag(2, WireType.Varint).int32(message.conventionalRound);
        /* int32 participateTeam = 3; */
        if (message.participateTeam !== 0)
            writer.tag(3, WireType.Varint).int32(message.participateTeam);
        /* int32 participatePlayer = 4; */
        if (message.participatePlayer !== 0)
            writer.tag(4, WireType.Varint).int32(message.participatePlayer);
        /* string marketValue = 5; */
        if (message.marketValue !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.marketValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Statistics
 */
export const LeaguesDetail_Statistics = new LeaguesDetail_Statistics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_RelationLeague$Type extends MessageType<LeaguesDetail_RelationLeague> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.RelationLeague", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_RelationLeague>): LeaguesDetail_RelationLeague {
        const message = { id: 0, type: 0, name: "", logo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_RelationLeague>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_RelationLeague): LeaguesDetail_RelationLeague {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* int32 type */ 2:
                    message.type = reader.int32();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* string logo */ 4:
                    message.logo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_RelationLeague, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* int32 type = 2; */
        if (message.type !== 0)
            writer.tag(2, WireType.Varint).int32(message.type);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.name);
        /* string logo = 4; */
        if (message.logo !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.logo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.RelationLeague
 */
export const LeaguesDetail_RelationLeague = new LeaguesDetail_RelationLeague$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Info$Type extends MessageType<LeaguesDetail_Info> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Info", [
            { no: 1, name: "statistics", kind: "message", T: () => LeaguesDetail_Statistics },
            { no: 2, name: "upgradeTeams", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "downgradeTeams", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "relationLeagues", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_RelationLeague }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Info>): LeaguesDetail_Info {
        const message = { upgradeTeams: [], downgradeTeams: [], relationLeagues: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Info>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Info): LeaguesDetail_Info {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Statistics statistics */ 1:
                    message.statistics = LeaguesDetail_Statistics.internalBinaryRead(reader, reader.uint32(), options, message.statistics);
                    break;
                case /* repeated int32 upgradeTeams */ 2:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.upgradeTeams.push(reader.int32());
                    else
                        message.upgradeTeams.push(reader.int32());
                    break;
                case /* repeated int32 downgradeTeams */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.downgradeTeams.push(reader.int32());
                    else
                        message.downgradeTeams.push(reader.int32());
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.RelationLeague relationLeagues */ 4:
                    message.relationLeagues.push(LeaguesDetail_RelationLeague.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Info, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Statistics statistics = 1; */
        if (message.statistics)
            LeaguesDetail_Statistics.internalBinaryWrite(message.statistics, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated int32 upgradeTeams = 2; */
        if (message.upgradeTeams.length) {
            writer.tag(2, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.upgradeTeams.length; i++)
                writer.int32(message.upgradeTeams[i]);
            writer.join();
        }
        /* repeated int32 downgradeTeams = 3; */
        if (message.downgradeTeams.length) {
            writer.tag(3, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.downgradeTeams.length; i++)
                writer.int32(message.downgradeTeams[i]);
            writer.join();
        }
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.RelationLeague relationLeagues = 4; */
        for (let i = 0; i < message.relationLeagues.length; i++)
            LeaguesDetail_RelationLeague.internalBinaryWrite(message.relationLeagues[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Info
 */
export const LeaguesDetail_Info = new LeaguesDetail_Info$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_MatchData$Type extends MessageType<LeaguesDetail_MatchData> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MatchData", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "homeId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "awayId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "openDate", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "startTime", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "homeScore", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "awayScore", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "homeHalfScore", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "awayHalfScore", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "homeCorner", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "awayCorner", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "homePenalty", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "awayPenalty", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "homeExtend", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "awayExtend", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 16, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 17, name: "note", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "neutral", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_MatchData>): LeaguesDetail_MatchData {
        const message = { id: 0, homeId: 0, awayId: 0, openDate: 0, startTime: 0, homeScore: 0, awayScore: 0, homeHalfScore: 0, awayHalfScore: 0, homeCorner: 0, awayCorner: 0, homePenalty: 0, awayPenalty: 0, homeExtend: 0, awayExtend: 0, status: 0, note: "", neutral: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_MatchData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_MatchData): LeaguesDetail_MatchData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* int32 homeId */ 2:
                    message.homeId = reader.int32();
                    break;
                case /* int32 awayId */ 3:
                    message.awayId = reader.int32();
                    break;
                case /* int32 openDate */ 4:
                    message.openDate = reader.int32();
                    break;
                case /* int32 startTime */ 5:
                    message.startTime = reader.int32();
                    break;
                case /* int32 homeScore */ 6:
                    message.homeScore = reader.int32();
                    break;
                case /* int32 awayScore */ 7:
                    message.awayScore = reader.int32();
                    break;
                case /* int32 homeHalfScore */ 8:
                    message.homeHalfScore = reader.int32();
                    break;
                case /* int32 awayHalfScore */ 9:
                    message.awayHalfScore = reader.int32();
                    break;
                case /* int32 homeCorner */ 10:
                    message.homeCorner = reader.int32();
                    break;
                case /* int32 awayCorner */ 11:
                    message.awayCorner = reader.int32();
                    break;
                case /* int32 homePenalty */ 12:
                    message.homePenalty = reader.int32();
                    break;
                case /* int32 awayPenalty */ 13:
                    message.awayPenalty = reader.int32();
                    break;
                case /* int32 homeExtend */ 14:
                    message.homeExtend = reader.int32();
                    break;
                case /* int32 awayExtend */ 15:
                    message.awayExtend = reader.int32();
                    break;
                case /* int32 status */ 16:
                    message.status = reader.int32();
                    break;
                case /* string note */ 17:
                    message.note = reader.string();
                    break;
                case /* int32 neutral */ 18:
                    message.neutral = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_MatchData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* int32 homeId = 2; */
        if (message.homeId !== 0)
            writer.tag(2, WireType.Varint).int32(message.homeId);
        /* int32 awayId = 3; */
        if (message.awayId !== 0)
            writer.tag(3, WireType.Varint).int32(message.awayId);
        /* int32 openDate = 4; */
        if (message.openDate !== 0)
            writer.tag(4, WireType.Varint).int32(message.openDate);
        /* int32 startTime = 5; */
        if (message.startTime !== 0)
            writer.tag(5, WireType.Varint).int32(message.startTime);
        /* int32 homeScore = 6; */
        if (message.homeScore !== 0)
            writer.tag(6, WireType.Varint).int32(message.homeScore);
        /* int32 awayScore = 7; */
        if (message.awayScore !== 0)
            writer.tag(7, WireType.Varint).int32(message.awayScore);
        /* int32 homeHalfScore = 8; */
        if (message.homeHalfScore !== 0)
            writer.tag(8, WireType.Varint).int32(message.homeHalfScore);
        /* int32 awayHalfScore = 9; */
        if (message.awayHalfScore !== 0)
            writer.tag(9, WireType.Varint).int32(message.awayHalfScore);
        /* int32 homeCorner = 10; */
        if (message.homeCorner !== 0)
            writer.tag(10, WireType.Varint).int32(message.homeCorner);
        /* int32 awayCorner = 11; */
        if (message.awayCorner !== 0)
            writer.tag(11, WireType.Varint).int32(message.awayCorner);
        /* int32 homePenalty = 12; */
        if (message.homePenalty !== 0)
            writer.tag(12, WireType.Varint).int32(message.homePenalty);
        /* int32 awayPenalty = 13; */
        if (message.awayPenalty !== 0)
            writer.tag(13, WireType.Varint).int32(message.awayPenalty);
        /* int32 homeExtend = 14; */
        if (message.homeExtend !== 0)
            writer.tag(14, WireType.Varint).int32(message.homeExtend);
        /* int32 awayExtend = 15; */
        if (message.awayExtend !== 0)
            writer.tag(15, WireType.Varint).int32(message.awayExtend);
        /* int32 status = 16; */
        if (message.status !== 0)
            writer.tag(16, WireType.Varint).int32(message.status);
        /* string note = 17; */
        if (message.note !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.note);
        /* int32 neutral = 18; */
        if (message.neutral !== 0)
            writer.tag(18, WireType.Varint).int32(message.neutral);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MatchData
 */
export const LeaguesDetail_MatchData = new LeaguesDetail_MatchData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Row$Type extends MessageType<LeaguesDetail_Row> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Row", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "homeScore", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "awayScore", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "homeName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "awayName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "data", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_MatchData }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Row>): LeaguesDetail_Row {
        const message = { name: "", homeScore: "", awayScore: "", homeName: "", awayName: "", data: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Row>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Row): LeaguesDetail_Row {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string homeScore */ 2:
                    message.homeScore = reader.string();
                    break;
                case /* string awayScore */ 3:
                    message.awayScore = reader.string();
                    break;
                case /* string homeName */ 4:
                    message.homeName = reader.string();
                    break;
                case /* string awayName */ 5:
                    message.awayName = reader.string();
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MatchData data */ 6:
                    message.data.push(LeaguesDetail_MatchData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Row, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* string homeScore = 2; */
        if (message.homeScore !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.homeScore);
        /* string awayScore = 3; */
        if (message.awayScore !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.awayScore);
        /* string homeName = 4; */
        if (message.homeName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.homeName);
        /* string awayName = 5; */
        if (message.awayName !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.awayName);
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MatchData data = 6; */
        for (let i = 0; i < message.data.length; i++)
            LeaguesDetail_MatchData.internalBinaryWrite(message.data[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Row
 */
export const LeaguesDetail_Row = new LeaguesDetail_Row$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Match$Type extends MessageType<LeaguesDetail_Match> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Match", [
            { no: 1, name: "stageId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "isRoundBattle", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "rows", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_Row }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Match>): LeaguesDetail_Match {
        const message = { stageId: 0, type: "", isRoundBattle: 0, rows: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Match>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Match): LeaguesDetail_Match {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 stageId */ 1:
                    message.stageId = reader.int32();
                    break;
                case /* string type */ 2:
                    message.type = reader.string();
                    break;
                case /* int32 isRoundBattle */ 3:
                    message.isRoundBattle = reader.int32();
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Row rows */ 4:
                    message.rows.push(LeaguesDetail_Row.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Match, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 stageId = 1; */
        if (message.stageId !== 0)
            writer.tag(1, WireType.Varint).int32(message.stageId);
        /* string type = 2; */
        if (message.type !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.type);
        /* int32 isRoundBattle = 3; */
        if (message.isRoundBattle !== 0)
            writer.tag(3, WireType.Varint).int32(message.isRoundBattle);
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Row rows = 4; */
        for (let i = 0; i < message.rows.length; i++)
            LeaguesDetail_Row.internalBinaryWrite(message.rows[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Match
 */
export const LeaguesDetail_Match = new LeaguesDetail_Match$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_LineupDetail$Type extends MessageType<LeaguesDetail_LineupDetail> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.LineupDetail", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "rating", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "locationX", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "locationY", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "position", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "teamId", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_LineupDetail>): LeaguesDetail_LineupDetail {
        const message = { id: 0, name: "", logo: "", rating: "", locationX: 0, locationY: 0, position: "", teamId: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_LineupDetail>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_LineupDetail): LeaguesDetail_LineupDetail {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string logo */ 3:
                    message.logo = reader.string();
                    break;
                case /* string rating */ 4:
                    message.rating = reader.string();
                    break;
                case /* int32 locationX */ 5:
                    message.locationX = reader.int32();
                    break;
                case /* int32 locationY */ 6:
                    message.locationY = reader.int32();
                    break;
                case /* string position */ 7:
                    message.position = reader.string();
                    break;
                case /* int32 teamId */ 8:
                    message.teamId = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_LineupDetail, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string logo = 3; */
        if (message.logo !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.logo);
        /* string rating = 4; */
        if (message.rating !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.rating);
        /* int32 locationX = 5; */
        if (message.locationX !== 0)
            writer.tag(5, WireType.Varint).int32(message.locationX);
        /* int32 locationY = 6; */
        if (message.locationY !== 0)
            writer.tag(6, WireType.Varint).int32(message.locationY);
        /* string position = 7; */
        if (message.position !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.position);
        /* int32 teamId = 8; */
        if (message.teamId !== 0)
            writer.tag(8, WireType.Varint).int32(message.teamId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.LineupDetail
 */
export const LeaguesDetail_LineupDetail = new LeaguesDetail_LineupDetail$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_BestLineup$Type extends MessageType<LeaguesDetail_BestLineup> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.BestLineup", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "detail", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_LineupDetail }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_BestLineup>): LeaguesDetail_BestLineup {
        const message = { id: 0, name: "", detail: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_BestLineup>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_BestLineup): LeaguesDetail_BestLineup {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.LineupDetail detail */ 3:
                    message.detail.push(LeaguesDetail_LineupDetail.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_BestLineup, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.LineupDetail detail = 3; */
        for (let i = 0; i < message.detail.length; i++)
            LeaguesDetail_LineupDetail.internalBinaryWrite(message.detail[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.BestLineup
 */
export const LeaguesDetail_BestLineup = new LeaguesDetail_BestLineup$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Team$Type extends MessageType<LeaguesDetail_Team> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Team", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Team>): LeaguesDetail_Team {
        const message = { id: 0, name: "", logo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Team>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Team): LeaguesDetail_Team {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string logo */ 3:
                    message.logo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Team, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string logo = 3; */
        if (message.logo !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.logo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Team
 */
export const LeaguesDetail_Team = new LeaguesDetail_Team$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Promotion$Type extends MessageType<LeaguesDetail_Promotion> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Promotion", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Promotion>): LeaguesDetail_Promotion {
        const message = { id: 0, name: "", color: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Promotion>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Promotion): LeaguesDetail_Promotion {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string color */ 3:
                    message.color = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Promotion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string color = 3; */
        if (message.color !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.color);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Promotion
 */
export const LeaguesDetail_Promotion = new LeaguesDetail_Promotion$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_TableRows$Type extends MessageType<LeaguesDetail_TableRows> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRows", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "promotionId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "points", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "won", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "draw", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "loss", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "goals", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "goalsAgainst", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "goalDiff", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_TableRows>): LeaguesDetail_TableRows {
        const message = { id: 0, promotionId: 0, points: 0, position: 0, total: 0, won: 0, draw: 0, loss: 0, goals: 0, goalsAgainst: 0, goalDiff: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_TableRows>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_TableRows): LeaguesDetail_TableRows {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* int32 promotionId */ 2:
                    message.promotionId = reader.int32();
                    break;
                case /* int32 points */ 3:
                    message.points = reader.int32();
                    break;
                case /* int32 position */ 4:
                    message.position = reader.int32();
                    break;
                case /* int32 total */ 5:
                    message.total = reader.int32();
                    break;
                case /* int32 won */ 6:
                    message.won = reader.int32();
                    break;
                case /* int32 draw */ 7:
                    message.draw = reader.int32();
                    break;
                case /* int32 loss */ 8:
                    message.loss = reader.int32();
                    break;
                case /* int32 goals */ 9:
                    message.goals = reader.int32();
                    break;
                case /* int32 goalsAgainst */ 10:
                    message.goalsAgainst = reader.int32();
                    break;
                case /* int32 goalDiff */ 11:
                    message.goalDiff = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_TableRows, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* int32 promotionId = 2; */
        if (message.promotionId !== 0)
            writer.tag(2, WireType.Varint).int32(message.promotionId);
        /* int32 points = 3; */
        if (message.points !== 0)
            writer.tag(3, WireType.Varint).int32(message.points);
        /* int32 position = 4; */
        if (message.position !== 0)
            writer.tag(4, WireType.Varint).int32(message.position);
        /* int32 total = 5; */
        if (message.total !== 0)
            writer.tag(5, WireType.Varint).int32(message.total);
        /* int32 won = 6; */
        if (message.won !== 0)
            writer.tag(6, WireType.Varint).int32(message.won);
        /* int32 draw = 7; */
        if (message.draw !== 0)
            writer.tag(7, WireType.Varint).int32(message.draw);
        /* int32 loss = 8; */
        if (message.loss !== 0)
            writer.tag(8, WireType.Varint).int32(message.loss);
        /* int32 goals = 9; */
        if (message.goals !== 0)
            writer.tag(9, WireType.Varint).int32(message.goals);
        /* int32 goalsAgainst = 10; */
        if (message.goalsAgainst !== 0)
            writer.tag(10, WireType.Varint).int32(message.goalsAgainst);
        /* int32 goalDiff = 11; */
        if (message.goalDiff !== 0)
            writer.tag(11, WireType.Varint).int32(message.goalDiff);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRows
 */
export const LeaguesDetail_TableRows = new LeaguesDetail_TableRows$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_TableData$Type extends MessageType<LeaguesDetail_TableData> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableData", [
            { no: 1, name: "group", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "rows", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_TableRows }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_TableData>): LeaguesDetail_TableData {
        const message = { group: "", rows: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_TableData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_TableData): LeaguesDetail_TableData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string group */ 1:
                    message.group = reader.string();
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRows rows */ 2:
                    message.rows.push(LeaguesDetail_TableRows.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_TableData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string group = 1; */
        if (message.group !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.group);
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRows rows = 2; */
        for (let i = 0; i < message.rows.length; i++)
            LeaguesDetail_TableRows.internalBinaryWrite(message.rows[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableData
 */
export const LeaguesDetail_TableData = new LeaguesDetail_TableData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_TableRank$Type extends MessageType<LeaguesDetail_TableRank> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRank", [
            { no: 1, name: "stageId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "data", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_TableData }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_TableRank>): LeaguesDetail_TableRank {
        const message = { stageId: 0, data: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_TableRank>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_TableRank): LeaguesDetail_TableRank {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 stageId */ 1:
                    message.stageId = reader.int32();
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableData data */ 2:
                    message.data.push(LeaguesDetail_TableData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_TableRank, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 stageId = 1; */
        if (message.stageId !== 0)
            writer.tag(1, WireType.Varint).int32(message.stageId);
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableData data = 2; */
        for (let i = 0; i < message.data.length; i++)
            LeaguesDetail_TableData.internalBinaryWrite(message.data[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRank
 */
export const LeaguesDetail_TableRank = new LeaguesDetail_TableRank$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Table$Type extends MessageType<LeaguesDetail_Table> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Table", [
            { no: 1, name: "promotions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_Promotion },
            { no: 2, name: "rank", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LeaguesDetail_TableRank },
            { no: 3, name: "rule", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Table>): LeaguesDetail_Table {
        const message = { promotions: [], rank: [], rule: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Table>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Table): LeaguesDetail_Table {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Promotion promotions */ 1:
                    message.promotions.push(LeaguesDetail_Promotion.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRank rank */ 2:
                    message.rank.push(LeaguesDetail_TableRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string rule */ 3:
                    message.rule = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Table, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Promotion promotions = 1; */
        for (let i = 0; i < message.promotions.length; i++)
            LeaguesDetail_Promotion.internalBinaryWrite(message.promotions[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.TableRank rank = 2; */
        for (let i = 0; i < message.rank.length; i++)
            LeaguesDetail_TableRank.internalBinaryWrite(message.rank[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string rule = 3; */
        if (message.rule !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.rule);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Table
 */
export const LeaguesDetail_Table = new LeaguesDetail_Table$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_ShooterRank$Type extends MessageType<LeaguesDetail_ShooterRank> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.ShooterRank", [
            { no: 1, name: "playerId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "teamId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_ShooterRank>): LeaguesDetail_ShooterRank {
        const message = { playerId: 0, teamId: 0, position: 0, total: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_ShooterRank>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_ShooterRank): LeaguesDetail_ShooterRank {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 playerId */ 1:
                    message.playerId = reader.int32();
                    break;
                case /* int32 teamId */ 2:
                    message.teamId = reader.int32();
                    break;
                case /* int32 position */ 3:
                    message.position = reader.int32();
                    break;
                case /* int32 total */ 4:
                    message.total = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_ShooterRank, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 playerId = 1; */
        if (message.playerId !== 0)
            writer.tag(1, WireType.Varint).int32(message.playerId);
        /* int32 teamId = 2; */
        if (message.teamId !== 0)
            writer.tag(2, WireType.Varint).int32(message.teamId);
        /* int32 position = 3; */
        if (message.position !== 0)
            writer.tag(3, WireType.Varint).int32(message.position);
        /* int32 total = 4; */
        if (message.total !== 0)
            writer.tag(4, WireType.Varint).int32(message.total);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.ShooterRank
 */
export const LeaguesDetail_ShooterRank = new LeaguesDetail_ShooterRank$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_Player$Type extends MessageType<LeaguesDetail_Player> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Player", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "teamId", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_Player>): LeaguesDetail_Player {
        const message = { id: 0, name: "", logo: "", teamId: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_Player>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_Player): LeaguesDetail_Player {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string logo */ 3:
                    message.logo = reader.string();
                    break;
                case /* int32 teamId */ 4:
                    message.teamId = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_Player, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string logo = 3; */
        if (message.logo !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.logo);
        /* int32 teamId = 4; */
        if (message.teamId !== 0)
            writer.tag(4, WireType.Varint).int32(message.teamId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.Player
 */
export const LeaguesDetail_Player = new LeaguesDetail_Player$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaguesDetail_MarketValueRank$Type extends MessageType<LeaguesDetail_MarketValueRank> {
    constructor() {
        super("ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MarketValueRank", [
            { no: 1, name: "playerId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "marketValue", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "teamId", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<LeaguesDetail_MarketValueRank>): LeaguesDetail_MarketValueRank {
        const message = { playerId: 0, position: 0, total: 0, marketValue: "", teamId: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LeaguesDetail_MarketValueRank>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LeaguesDetail_MarketValueRank): LeaguesDetail_MarketValueRank {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 playerId */ 1:
                    message.playerId = reader.int32();
                    break;
                case /* int32 position */ 2:
                    message.position = reader.int32();
                    break;
                case /* int32 total */ 3:
                    message.total = reader.int32();
                    break;
                case /* string marketValue */ 4:
                    message.marketValue = reader.string();
                    break;
                case /* int32 teamId */ 5:
                    message.teamId = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LeaguesDetail_MarketValueRank, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 playerId = 1; */
        if (message.playerId !== 0)
            writer.tag(1, WireType.Varint).int32(message.playerId);
        /* int32 position = 2; */
        if (message.position !== 0)
            writer.tag(2, WireType.Varint).int32(message.position);
        /* int32 total = 3; */
        if (message.total !== 0)
            writer.tag(3, WireType.Varint).int32(message.total);
        /* string marketValue = 4; */
        if (message.marketValue !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.marketValue);
        /* int32 teamId = 5; */
        if (message.teamId !== 0)
            writer.tag(5, WireType.Varint).int32(message.teamId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.LeaguesDetail.LeaguesDetail.MarketValueRank
 */
export const LeaguesDetail_MarketValueRank = new LeaguesDetail_MarketValueRank$Type();
