// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/leagues/TrendStats.proto" (package "ApiProtos.Leagues.TrendStats", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats
 */
export interface TrendStats {
    /**
     * @generated from protobuf field: ApiProtos.Leagues.TrendStats.TrendStats.Winlosttables winLostTables = 1;
     */
    winLostTables?: TrendStats_Winlosttables; // 勝負平
    /**
     * @generated from protobuf field: ApiProtos.Leagues.TrendStats.TrendStats.Asiatables asiaTables = 2;
     */
    asiaTables?: TrendStats_Asiatables; // 讓球
    /**
     * @generated from protobuf field: ApiProtos.Leagues.TrendStats.TrendStats.Goalbigsmall goalBigSmall = 3;
     */
    goalBigSmall?: TrendStats_Goalbigsmall; // 總進球
    /**
     * @generated from protobuf field: ApiProtos.Leagues.TrendStats.TrendStats.Halffull halfFull = 4;
     */
    halfFull?: TrendStats_Halffull; // 半全場
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.GoalOddeven goalOddEven = 5;
     */
    goalOddEven: TrendStats_GoalOddeven[]; // 單雙
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.GoalHomeAway goalHomeAway = 6;
     */
    goalHomeAway: TrendStats_GoalHomeAway[]; // 進球走勢
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.Cornerfoul cornerFoul = 7;
     */
    cornerFoul: TrendStats_Cornerfoul[]; // 角球罰牌
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.Team teams = 8;
     */
    teams: TrendStats_Team[]; // 球隊列表
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem
 */
export interface TrendStats_WinlostItem {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 win = 3;
     */
    win: number; // 勝
    /**
     * @generated from protobuf field: uint32 lost = 4;
     */
    lost: number; // 負
    /**
     * @generated from protobuf field: uint32 tie = 5;
     */
    tie: number; // 平
    /**
     * @generated from protobuf field: uint32 diff = 6;
     */
    diff: number; // 淨勝差
    /**
     * @generated from protobuf field: uint32 position = 7;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: string winRate = 8;
     */
    winRate: string; // 勝率
    /**
     * @generated from protobuf field: string lostRate = 9;
     */
    lostRate: string; // 負率
    /**
     * @generated from protobuf field: string tieRate = 10;
     */
    tieRate: string; // 平率
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Winlosttables
 */
export interface TrendStats_Winlosttables {
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem total = 1;
     */
    total: TrendStats_WinlostItem[]; // 總計
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem home = 2;
     */
    home: TrendStats_WinlostItem[]; // 主場
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem away = 3;
     */
    away: TrendStats_WinlostItem[]; // 客場
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Asiatables
 */
export interface TrendStats_Asiatables {
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem total = 1;
     */
    total: TrendStats_WinlostItem[]; // 總計
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem home = 2;
     */
    home: TrendStats_WinlostItem[]; // 主場
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem away = 3;
     */
    away: TrendStats_WinlostItem[]; // 客場
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem
 */
export interface TrendStats_BigSmallItem {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 big = 3;
     */
    big: number; // 大
    /**
     * @generated from protobuf field: uint32 small = 4;
     */
    small: number; // 小
    /**
     * @generated from protobuf field: uint32 tie = 5;
     */
    tie: number; // 平
    /**
     * @generated from protobuf field: uint32 diff = 6;
     */
    diff: number; // 大淨勝
    /**
     * @generated from protobuf field: uint32 position = 7;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: string bigRate = 8;
     */
    bigRate: string; // 大率
    /**
     * @generated from protobuf field: string smallRate = 9;
     */
    smallRate: string; // 小率
    /**
     * @generated from protobuf field: string tieRate = 10;
     */
    tieRate: string; // 平率
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Goalbigsmall
 */
export interface TrendStats_Goalbigsmall {
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem total = 1;
     */
    total: TrendStats_BigSmallItem[]; // 總計
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem home = 2;
     */
    home: TrendStats_BigSmallItem[]; // 主場
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem away = 3;
     */
    away: TrendStats_BigSmallItem[]; // 客場
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem
 */
export interface TrendStats_HalfFullItem {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 position = 3;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: uint32 winwin = 4;
     */
    winwin: number; // 勝勝
    /**
     * @generated from protobuf field: uint32 wintie = 5;
     */
    wintie: number; // 勝平
    /**
     * @generated from protobuf field: uint32 winlost = 6;
     */
    winlost: number; // 勝負
    /**
     * @generated from protobuf field: uint32 tiewin = 7;
     */
    tiewin: number; // 平勝
    /**
     * @generated from protobuf field: uint32 tietie = 8;
     */
    tietie: number; // 平平
    /**
     * @generated from protobuf field: uint32 tielost = 9;
     */
    tielost: number; // 平負
    /**
     * @generated from protobuf field: uint32 lostwin = 10;
     */
    lostwin: number; // 負勝
    /**
     * @generated from protobuf field: uint32 losttie = 11;
     */
    losttie: number; // 負平
    /**
     * @generated from protobuf field: uint32 lostlost = 12;
     */
    lostlost: number; // 負負
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Halffull
 */
export interface TrendStats_Halffull {
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem total = 1;
     */
    total: TrendStats_HalfFullItem[]; // 總計
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem home = 2;
     */
    home: TrendStats_HalfFullItem[]; // 主場
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem away = 3;
     */
    away: TrendStats_HalfFullItem[]; // 客場
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.GoalOddeven
 */
export interface TrendStats_GoalOddeven {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 position = 3;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: uint32 one = 4;
     */
    one: number; // 1球
    /**
     * @generated from protobuf field: uint32 two = 5;
     */
    two: number; // 2球
    /**
     * @generated from protobuf field: uint32 three = 6;
     */
    three: number; // 3球
    /**
     * @generated from protobuf field: uint32 four = 7;
     */
    four: number; // 4球
    /**
     * @generated from protobuf field: uint32 five = 8;
     */
    five: number; // 5球
    /**
     * @generated from protobuf field: uint32 six = 9;
     */
    six: number; // 6球
    /**
     * @generated from protobuf field: uint32 sevenOrMore = 10;
     */
    sevenOrMore: number; // 7球+
    /**
     * @generated from protobuf field: uint32 oddCount = 11;
     */
    oddCount: number; // 單
    /**
     * @generated from protobuf field: uint32 evenCount = 12;
     */
    evenCount: number; // 雙
    /**
     * @generated from protobuf field: string oddRate = 13;
     */
    oddRate: string; // 單率
    /**
     * @generated from protobuf field: string evenRate = 14;
     */
    evenRate: string; // 雙率
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.GoalHomeAway
 */
export interface TrendStats_GoalHomeAway {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 position = 3;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: uint32 goalGames = 4;
     */
    goalGames: number; // 進球場次
    /**
     * @generated from protobuf field: uint32 goalTotal = 5;
     */
    goalTotal: number; // 總進球
    /**
     * @generated from protobuf field: uint32 goalHome = 6;
     */
    goalHome: number; // 主場進球
    /**
     * @generated from protobuf field: uint32 goalAway = 7;
     */
    goalAway: number; // 客場進球
    /**
     * @generated from protobuf field: string goalAvg = 8;
     */
    goalAvg: string; // 場均進球
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Cornerfoul
 */
export interface TrendStats_Cornerfoul {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: uint32 total = 2;
     */
    total: number; // 場次
    /**
     * @generated from protobuf field: uint32 position = 3;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: uint32 corner = 4;
     */
    corner: number; // 角球
    /**
     * @generated from protobuf field: string avgCorner = 5;
     */
    avgCorner: string; // 場均角球
    /**
     * @generated from protobuf field: uint32 foul = 6;
     */
    foul: number; // 罰牌
    /**
     * @generated from protobuf field: string avgFoul = 7;
     */
    avgFoul: string; // 場均罰牌
}
/**
 * @generated from protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Team
 */
export interface TrendStats_Team {
    /**
     * @generated from protobuf field: uint32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 隊伍名稱
    /**
     * @generated from protobuf field: string shortName = 3;
     */
    shortName: string; // 隊伍縮寫名稱
    /**
     * @generated from protobuf field: string logo = 4;
     */
    logo: string; // 隊伍logo
}
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats$Type extends MessageType<TrendStats> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats", [
            { no: 1, name: "winLostTables", kind: "message", T: () => TrendStats_Winlosttables },
            { no: 2, name: "asiaTables", kind: "message", T: () => TrendStats_Asiatables },
            { no: 3, name: "goalBigSmall", kind: "message", T: () => TrendStats_Goalbigsmall },
            { no: 4, name: "halfFull", kind: "message", T: () => TrendStats_Halffull },
            { no: 5, name: "goalOddEven", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_GoalOddeven },
            { no: 6, name: "goalHomeAway", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_GoalHomeAway },
            { no: 7, name: "cornerFoul", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_Cornerfoul },
            { no: 8, name: "teams", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_Team }
        ]);
    }
    create(value?: PartialMessage<TrendStats>): TrendStats {
        const message = { goalOddEven: [], goalHomeAway: [], cornerFoul: [], teams: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats): TrendStats {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.Leagues.TrendStats.TrendStats.Winlosttables winLostTables */ 1:
                    message.winLostTables = TrendStats_Winlosttables.internalBinaryRead(reader, reader.uint32(), options, message.winLostTables);
                    break;
                case /* ApiProtos.Leagues.TrendStats.TrendStats.Asiatables asiaTables */ 2:
                    message.asiaTables = TrendStats_Asiatables.internalBinaryRead(reader, reader.uint32(), options, message.asiaTables);
                    break;
                case /* ApiProtos.Leagues.TrendStats.TrendStats.Goalbigsmall goalBigSmall */ 3:
                    message.goalBigSmall = TrendStats_Goalbigsmall.internalBinaryRead(reader, reader.uint32(), options, message.goalBigSmall);
                    break;
                case /* ApiProtos.Leagues.TrendStats.TrendStats.Halffull halfFull */ 4:
                    message.halfFull = TrendStats_Halffull.internalBinaryRead(reader, reader.uint32(), options, message.halfFull);
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.GoalOddeven goalOddEven */ 5:
                    message.goalOddEven.push(TrendStats_GoalOddeven.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.GoalHomeAway goalHomeAway */ 6:
                    message.goalHomeAway.push(TrendStats_GoalHomeAway.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.Cornerfoul cornerFoul */ 7:
                    message.cornerFoul.push(TrendStats_Cornerfoul.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.Team teams */ 8:
                    message.teams.push(TrendStats_Team.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.Leagues.TrendStats.TrendStats.Winlosttables winLostTables = 1; */
        if (message.winLostTables)
            TrendStats_Winlosttables.internalBinaryWrite(message.winLostTables, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Leagues.TrendStats.TrendStats.Asiatables asiaTables = 2; */
        if (message.asiaTables)
            TrendStats_Asiatables.internalBinaryWrite(message.asiaTables, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Leagues.TrendStats.TrendStats.Goalbigsmall goalBigSmall = 3; */
        if (message.goalBigSmall)
            TrendStats_Goalbigsmall.internalBinaryWrite(message.goalBigSmall, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.Leagues.TrendStats.TrendStats.Halffull halfFull = 4; */
        if (message.halfFull)
            TrendStats_Halffull.internalBinaryWrite(message.halfFull, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.GoalOddeven goalOddEven = 5; */
        for (let i = 0; i < message.goalOddEven.length; i++)
            TrendStats_GoalOddeven.internalBinaryWrite(message.goalOddEven[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.GoalHomeAway goalHomeAway = 6; */
        for (let i = 0; i < message.goalHomeAway.length; i++)
            TrendStats_GoalHomeAway.internalBinaryWrite(message.goalHomeAway[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.Cornerfoul cornerFoul = 7; */
        for (let i = 0; i < message.cornerFoul.length; i++)
            TrendStats_Cornerfoul.internalBinaryWrite(message.cornerFoul[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.Team teams = 8; */
        for (let i = 0; i < message.teams.length; i++)
            TrendStats_Team.internalBinaryWrite(message.teams[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats
 */
export const TrendStats = new TrendStats$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_WinlostItem$Type extends MessageType<TrendStats_WinlostItem> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "win", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "lost", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "tie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "diff", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "position", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "winRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "lostRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "tieRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TrendStats_WinlostItem>): TrendStats_WinlostItem {
        const message = { teamId: 0, total: 0, win: 0, lost: 0, tie: 0, diff: 0, position: 0, winRate: "", lostRate: "", tieRate: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_WinlostItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_WinlostItem): TrendStats_WinlostItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 win */ 3:
                    message.win = reader.uint32();
                    break;
                case /* uint32 lost */ 4:
                    message.lost = reader.uint32();
                    break;
                case /* uint32 tie */ 5:
                    message.tie = reader.uint32();
                    break;
                case /* uint32 diff */ 6:
                    message.diff = reader.uint32();
                    break;
                case /* uint32 position */ 7:
                    message.position = reader.uint32();
                    break;
                case /* string winRate */ 8:
                    message.winRate = reader.string();
                    break;
                case /* string lostRate */ 9:
                    message.lostRate = reader.string();
                    break;
                case /* string tieRate */ 10:
                    message.tieRate = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_WinlostItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 win = 3; */
        if (message.win !== 0)
            writer.tag(3, WireType.Varint).uint32(message.win);
        /* uint32 lost = 4; */
        if (message.lost !== 0)
            writer.tag(4, WireType.Varint).uint32(message.lost);
        /* uint32 tie = 5; */
        if (message.tie !== 0)
            writer.tag(5, WireType.Varint).uint32(message.tie);
        /* uint32 diff = 6; */
        if (message.diff !== 0)
            writer.tag(6, WireType.Varint).uint32(message.diff);
        /* uint32 position = 7; */
        if (message.position !== 0)
            writer.tag(7, WireType.Varint).uint32(message.position);
        /* string winRate = 8; */
        if (message.winRate !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.winRate);
        /* string lostRate = 9; */
        if (message.lostRate !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.lostRate);
        /* string tieRate = 10; */
        if (message.tieRate !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.tieRate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem
 */
export const TrendStats_WinlostItem = new TrendStats_WinlostItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_Winlosttables$Type extends MessageType<TrendStats_Winlosttables> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.Winlosttables", [
            { no: 1, name: "total", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_WinlostItem },
            { no: 2, name: "home", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_WinlostItem },
            { no: 3, name: "away", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_WinlostItem }
        ]);
    }
    create(value?: PartialMessage<TrendStats_Winlosttables>): TrendStats_Winlosttables {
        const message = { total: [], home: [], away: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_Winlosttables>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_Winlosttables): TrendStats_Winlosttables {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem total */ 1:
                    message.total.push(TrendStats_WinlostItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem home */ 2:
                    message.home.push(TrendStats_WinlostItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem away */ 3:
                    message.away.push(TrendStats_WinlostItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_Winlosttables, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem total = 1; */
        for (let i = 0; i < message.total.length; i++)
            TrendStats_WinlostItem.internalBinaryWrite(message.total[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem home = 2; */
        for (let i = 0; i < message.home.length; i++)
            TrendStats_WinlostItem.internalBinaryWrite(message.home[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem away = 3; */
        for (let i = 0; i < message.away.length; i++)
            TrendStats_WinlostItem.internalBinaryWrite(message.away[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Winlosttables
 */
export const TrendStats_Winlosttables = new TrendStats_Winlosttables$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_Asiatables$Type extends MessageType<TrendStats_Asiatables> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.Asiatables", [
            { no: 1, name: "total", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_WinlostItem },
            { no: 2, name: "home", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_WinlostItem },
            { no: 3, name: "away", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_WinlostItem }
        ]);
    }
    create(value?: PartialMessage<TrendStats_Asiatables>): TrendStats_Asiatables {
        const message = { total: [], home: [], away: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_Asiatables>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_Asiatables): TrendStats_Asiatables {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem total */ 1:
                    message.total.push(TrendStats_WinlostItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem home */ 2:
                    message.home.push(TrendStats_WinlostItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem away */ 3:
                    message.away.push(TrendStats_WinlostItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_Asiatables, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem total = 1; */
        for (let i = 0; i < message.total.length; i++)
            TrendStats_WinlostItem.internalBinaryWrite(message.total[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem home = 2; */
        for (let i = 0; i < message.home.length; i++)
            TrendStats_WinlostItem.internalBinaryWrite(message.home[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.WinlostItem away = 3; */
        for (let i = 0; i < message.away.length; i++)
            TrendStats_WinlostItem.internalBinaryWrite(message.away[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Asiatables
 */
export const TrendStats_Asiatables = new TrendStats_Asiatables$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_BigSmallItem$Type extends MessageType<TrendStats_BigSmallItem> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "big", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "small", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "tie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "diff", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "position", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "bigRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "smallRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "tieRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TrendStats_BigSmallItem>): TrendStats_BigSmallItem {
        const message = { teamId: 0, total: 0, big: 0, small: 0, tie: 0, diff: 0, position: 0, bigRate: "", smallRate: "", tieRate: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_BigSmallItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_BigSmallItem): TrendStats_BigSmallItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 big */ 3:
                    message.big = reader.uint32();
                    break;
                case /* uint32 small */ 4:
                    message.small = reader.uint32();
                    break;
                case /* uint32 tie */ 5:
                    message.tie = reader.uint32();
                    break;
                case /* uint32 diff */ 6:
                    message.diff = reader.uint32();
                    break;
                case /* uint32 position */ 7:
                    message.position = reader.uint32();
                    break;
                case /* string bigRate */ 8:
                    message.bigRate = reader.string();
                    break;
                case /* string smallRate */ 9:
                    message.smallRate = reader.string();
                    break;
                case /* string tieRate */ 10:
                    message.tieRate = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_BigSmallItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 big = 3; */
        if (message.big !== 0)
            writer.tag(3, WireType.Varint).uint32(message.big);
        /* uint32 small = 4; */
        if (message.small !== 0)
            writer.tag(4, WireType.Varint).uint32(message.small);
        /* uint32 tie = 5; */
        if (message.tie !== 0)
            writer.tag(5, WireType.Varint).uint32(message.tie);
        /* uint32 diff = 6; */
        if (message.diff !== 0)
            writer.tag(6, WireType.Varint).uint32(message.diff);
        /* uint32 position = 7; */
        if (message.position !== 0)
            writer.tag(7, WireType.Varint).uint32(message.position);
        /* string bigRate = 8; */
        if (message.bigRate !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.bigRate);
        /* string smallRate = 9; */
        if (message.smallRate !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.smallRate);
        /* string tieRate = 10; */
        if (message.tieRate !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.tieRate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem
 */
export const TrendStats_BigSmallItem = new TrendStats_BigSmallItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_Goalbigsmall$Type extends MessageType<TrendStats_Goalbigsmall> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.Goalbigsmall", [
            { no: 1, name: "total", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_BigSmallItem },
            { no: 2, name: "home", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_BigSmallItem },
            { no: 3, name: "away", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_BigSmallItem }
        ]);
    }
    create(value?: PartialMessage<TrendStats_Goalbigsmall>): TrendStats_Goalbigsmall {
        const message = { total: [], home: [], away: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_Goalbigsmall>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_Goalbigsmall): TrendStats_Goalbigsmall {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem total */ 1:
                    message.total.push(TrendStats_BigSmallItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem home */ 2:
                    message.home.push(TrendStats_BigSmallItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem away */ 3:
                    message.away.push(TrendStats_BigSmallItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_Goalbigsmall, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem total = 1; */
        for (let i = 0; i < message.total.length; i++)
            TrendStats_BigSmallItem.internalBinaryWrite(message.total[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem home = 2; */
        for (let i = 0; i < message.home.length; i++)
            TrendStats_BigSmallItem.internalBinaryWrite(message.home[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.BigSmallItem away = 3; */
        for (let i = 0; i < message.away.length; i++)
            TrendStats_BigSmallItem.internalBinaryWrite(message.away[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Goalbigsmall
 */
export const TrendStats_Goalbigsmall = new TrendStats_Goalbigsmall$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_HalfFullItem$Type extends MessageType<TrendStats_HalfFullItem> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "position", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "winwin", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "wintie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "winlost", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "tiewin", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "tietie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "tielost", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "lostwin", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "losttie", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "lostlost", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TrendStats_HalfFullItem>): TrendStats_HalfFullItem {
        const message = { teamId: 0, total: 0, position: 0, winwin: 0, wintie: 0, winlost: 0, tiewin: 0, tietie: 0, tielost: 0, lostwin: 0, losttie: 0, lostlost: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_HalfFullItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_HalfFullItem): TrendStats_HalfFullItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 position */ 3:
                    message.position = reader.uint32();
                    break;
                case /* uint32 winwin */ 4:
                    message.winwin = reader.uint32();
                    break;
                case /* uint32 wintie */ 5:
                    message.wintie = reader.uint32();
                    break;
                case /* uint32 winlost */ 6:
                    message.winlost = reader.uint32();
                    break;
                case /* uint32 tiewin */ 7:
                    message.tiewin = reader.uint32();
                    break;
                case /* uint32 tietie */ 8:
                    message.tietie = reader.uint32();
                    break;
                case /* uint32 tielost */ 9:
                    message.tielost = reader.uint32();
                    break;
                case /* uint32 lostwin */ 10:
                    message.lostwin = reader.uint32();
                    break;
                case /* uint32 losttie */ 11:
                    message.losttie = reader.uint32();
                    break;
                case /* uint32 lostlost */ 12:
                    message.lostlost = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_HalfFullItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 position = 3; */
        if (message.position !== 0)
            writer.tag(3, WireType.Varint).uint32(message.position);
        /* uint32 winwin = 4; */
        if (message.winwin !== 0)
            writer.tag(4, WireType.Varint).uint32(message.winwin);
        /* uint32 wintie = 5; */
        if (message.wintie !== 0)
            writer.tag(5, WireType.Varint).uint32(message.wintie);
        /* uint32 winlost = 6; */
        if (message.winlost !== 0)
            writer.tag(6, WireType.Varint).uint32(message.winlost);
        /* uint32 tiewin = 7; */
        if (message.tiewin !== 0)
            writer.tag(7, WireType.Varint).uint32(message.tiewin);
        /* uint32 tietie = 8; */
        if (message.tietie !== 0)
            writer.tag(8, WireType.Varint).uint32(message.tietie);
        /* uint32 tielost = 9; */
        if (message.tielost !== 0)
            writer.tag(9, WireType.Varint).uint32(message.tielost);
        /* uint32 lostwin = 10; */
        if (message.lostwin !== 0)
            writer.tag(10, WireType.Varint).uint32(message.lostwin);
        /* uint32 losttie = 11; */
        if (message.losttie !== 0)
            writer.tag(11, WireType.Varint).uint32(message.losttie);
        /* uint32 lostlost = 12; */
        if (message.lostlost !== 0)
            writer.tag(12, WireType.Varint).uint32(message.lostlost);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem
 */
export const TrendStats_HalfFullItem = new TrendStats_HalfFullItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_Halffull$Type extends MessageType<TrendStats_Halffull> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.Halffull", [
            { no: 1, name: "total", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_HalfFullItem },
            { no: 2, name: "home", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_HalfFullItem },
            { no: 3, name: "away", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrendStats_HalfFullItem }
        ]);
    }
    create(value?: PartialMessage<TrendStats_Halffull>): TrendStats_Halffull {
        const message = { total: [], home: [], away: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_Halffull>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_Halffull): TrendStats_Halffull {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem total */ 1:
                    message.total.push(TrendStats_HalfFullItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem home */ 2:
                    message.home.push(TrendStats_HalfFullItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem away */ 3:
                    message.away.push(TrendStats_HalfFullItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_Halffull, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem total = 1; */
        for (let i = 0; i < message.total.length; i++)
            TrendStats_HalfFullItem.internalBinaryWrite(message.total[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem home = 2; */
        for (let i = 0; i < message.home.length; i++)
            TrendStats_HalfFullItem.internalBinaryWrite(message.home[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.TrendStats.TrendStats.HalfFullItem away = 3; */
        for (let i = 0; i < message.away.length; i++)
            TrendStats_HalfFullItem.internalBinaryWrite(message.away[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Halffull
 */
export const TrendStats_Halffull = new TrendStats_Halffull$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_GoalOddeven$Type extends MessageType<TrendStats_GoalOddeven> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.GoalOddeven", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "position", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "one", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "two", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "three", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "four", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "five", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "six", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "sevenOrMore", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "oddCount", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "evenCount", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "oddRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "evenRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TrendStats_GoalOddeven>): TrendStats_GoalOddeven {
        const message = { teamId: 0, total: 0, position: 0, one: 0, two: 0, three: 0, four: 0, five: 0, six: 0, sevenOrMore: 0, oddCount: 0, evenCount: 0, oddRate: "", evenRate: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_GoalOddeven>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_GoalOddeven): TrendStats_GoalOddeven {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 position */ 3:
                    message.position = reader.uint32();
                    break;
                case /* uint32 one */ 4:
                    message.one = reader.uint32();
                    break;
                case /* uint32 two */ 5:
                    message.two = reader.uint32();
                    break;
                case /* uint32 three */ 6:
                    message.three = reader.uint32();
                    break;
                case /* uint32 four */ 7:
                    message.four = reader.uint32();
                    break;
                case /* uint32 five */ 8:
                    message.five = reader.uint32();
                    break;
                case /* uint32 six */ 9:
                    message.six = reader.uint32();
                    break;
                case /* uint32 sevenOrMore */ 10:
                    message.sevenOrMore = reader.uint32();
                    break;
                case /* uint32 oddCount */ 11:
                    message.oddCount = reader.uint32();
                    break;
                case /* uint32 evenCount */ 12:
                    message.evenCount = reader.uint32();
                    break;
                case /* string oddRate */ 13:
                    message.oddRate = reader.string();
                    break;
                case /* string evenRate */ 14:
                    message.evenRate = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_GoalOddeven, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 position = 3; */
        if (message.position !== 0)
            writer.tag(3, WireType.Varint).uint32(message.position);
        /* uint32 one = 4; */
        if (message.one !== 0)
            writer.tag(4, WireType.Varint).uint32(message.one);
        /* uint32 two = 5; */
        if (message.two !== 0)
            writer.tag(5, WireType.Varint).uint32(message.two);
        /* uint32 three = 6; */
        if (message.three !== 0)
            writer.tag(6, WireType.Varint).uint32(message.three);
        /* uint32 four = 7; */
        if (message.four !== 0)
            writer.tag(7, WireType.Varint).uint32(message.four);
        /* uint32 five = 8; */
        if (message.five !== 0)
            writer.tag(8, WireType.Varint).uint32(message.five);
        /* uint32 six = 9; */
        if (message.six !== 0)
            writer.tag(9, WireType.Varint).uint32(message.six);
        /* uint32 sevenOrMore = 10; */
        if (message.sevenOrMore !== 0)
            writer.tag(10, WireType.Varint).uint32(message.sevenOrMore);
        /* uint32 oddCount = 11; */
        if (message.oddCount !== 0)
            writer.tag(11, WireType.Varint).uint32(message.oddCount);
        /* uint32 evenCount = 12; */
        if (message.evenCount !== 0)
            writer.tag(12, WireType.Varint).uint32(message.evenCount);
        /* string oddRate = 13; */
        if (message.oddRate !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.oddRate);
        /* string evenRate = 14; */
        if (message.evenRate !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.evenRate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.GoalOddeven
 */
export const TrendStats_GoalOddeven = new TrendStats_GoalOddeven$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_GoalHomeAway$Type extends MessageType<TrendStats_GoalHomeAway> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.GoalHomeAway", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "position", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "goalGames", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "goalTotal", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "goalHome", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "goalAway", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "goalAvg", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TrendStats_GoalHomeAway>): TrendStats_GoalHomeAway {
        const message = { teamId: 0, total: 0, position: 0, goalGames: 0, goalTotal: 0, goalHome: 0, goalAway: 0, goalAvg: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_GoalHomeAway>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_GoalHomeAway): TrendStats_GoalHomeAway {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 position */ 3:
                    message.position = reader.uint32();
                    break;
                case /* uint32 goalGames */ 4:
                    message.goalGames = reader.uint32();
                    break;
                case /* uint32 goalTotal */ 5:
                    message.goalTotal = reader.uint32();
                    break;
                case /* uint32 goalHome */ 6:
                    message.goalHome = reader.uint32();
                    break;
                case /* uint32 goalAway */ 7:
                    message.goalAway = reader.uint32();
                    break;
                case /* string goalAvg */ 8:
                    message.goalAvg = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_GoalHomeAway, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 position = 3; */
        if (message.position !== 0)
            writer.tag(3, WireType.Varint).uint32(message.position);
        /* uint32 goalGames = 4; */
        if (message.goalGames !== 0)
            writer.tag(4, WireType.Varint).uint32(message.goalGames);
        /* uint32 goalTotal = 5; */
        if (message.goalTotal !== 0)
            writer.tag(5, WireType.Varint).uint32(message.goalTotal);
        /* uint32 goalHome = 6; */
        if (message.goalHome !== 0)
            writer.tag(6, WireType.Varint).uint32(message.goalHome);
        /* uint32 goalAway = 7; */
        if (message.goalAway !== 0)
            writer.tag(7, WireType.Varint).uint32(message.goalAway);
        /* string goalAvg = 8; */
        if (message.goalAvg !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.goalAvg);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.GoalHomeAway
 */
export const TrendStats_GoalHomeAway = new TrendStats_GoalHomeAway$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_Cornerfoul$Type extends MessageType<TrendStats_Cornerfoul> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.Cornerfoul", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "total", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "position", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "corner", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "avgCorner", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "foul", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "avgFoul", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TrendStats_Cornerfoul>): TrendStats_Cornerfoul {
        const message = { teamId: 0, total: 0, position: 0, corner: 0, avgCorner: "", foul: 0, avgFoul: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_Cornerfoul>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_Cornerfoul): TrendStats_Cornerfoul {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* uint32 total */ 2:
                    message.total = reader.uint32();
                    break;
                case /* uint32 position */ 3:
                    message.position = reader.uint32();
                    break;
                case /* uint32 corner */ 4:
                    message.corner = reader.uint32();
                    break;
                case /* string avgCorner */ 5:
                    message.avgCorner = reader.string();
                    break;
                case /* uint32 foul */ 6:
                    message.foul = reader.uint32();
                    break;
                case /* string avgFoul */ 7:
                    message.avgFoul = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_Cornerfoul, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* uint32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).uint32(message.total);
        /* uint32 position = 3; */
        if (message.position !== 0)
            writer.tag(3, WireType.Varint).uint32(message.position);
        /* uint32 corner = 4; */
        if (message.corner !== 0)
            writer.tag(4, WireType.Varint).uint32(message.corner);
        /* string avgCorner = 5; */
        if (message.avgCorner !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.avgCorner);
        /* uint32 foul = 6; */
        if (message.foul !== 0)
            writer.tag(6, WireType.Varint).uint32(message.foul);
        /* string avgFoul = 7; */
        if (message.avgFoul !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.avgFoul);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Cornerfoul
 */
export const TrendStats_Cornerfoul = new TrendStats_Cornerfoul$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrendStats_Team$Type extends MessageType<TrendStats_Team> {
    constructor() {
        super("ApiProtos.Leagues.TrendStats.TrendStats.Team", [
            { no: 1, name: "teamId", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "shortName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<TrendStats_Team>): TrendStats_Team {
        const message = { teamId: 0, name: "", shortName: "", logo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TrendStats_Team>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrendStats_Team): TrendStats_Team {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 teamId */ 1:
                    message.teamId = reader.uint32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string shortName */ 3:
                    message.shortName = reader.string();
                    break;
                case /* string logo */ 4:
                    message.logo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TrendStats_Team, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).uint32(message.teamId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string shortName = 3; */
        if (message.shortName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.shortName);
        /* string logo = 4; */
        if (message.logo !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.logo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.TrendStats.TrendStats.Team
 */
export const TrendStats_Team = new TrendStats_Team$Type();
