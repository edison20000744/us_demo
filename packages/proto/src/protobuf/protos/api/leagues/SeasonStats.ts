// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/leagues/SeasonStats.proto" (package "ApiProtos.Leagues.SeasonStats", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats
 */
export interface SeasonStats {
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank bestTeamRank = 1;
     */
    bestTeamRank: SeasonStats_BestTeamRank[]; // 最佳球隊排行
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank bestTeamRankHistory = 2;
     */
    bestTeamRankHistory: SeasonStats_BestTeamRank[]; // 歷年最佳球隊排行
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank bestPlayerRank = 3;
     */
    bestPlayerRank: SeasonStats_BestPlayerRank[]; // 最佳球員排行
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank bestPlayerRankHistory = 4;
     */
    bestPlayerRankHistory: SeasonStats_BestPlayerRank[]; // 歷年最佳球員排行
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.SeasonStats.SeasonStats.Team teams = 5;
     */
    teams: SeasonStats_Team[]; // 隊伍列表
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.SeasonStats.SeasonStats.Player players = 6;
     */
    players: SeasonStats_Player[]; // 球員列表
}
/**
 * @generated from protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.TeamRank
 */
export interface SeasonStats_TeamRank {
    /**
     * @generated from protobuf field: int32 teamId = 1;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: int32 position = 2;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: int32 total = 3;
     */
    total: number; // 項目總數
    /**
     * @generated from protobuf field: string seasonName = 4;
     */
    seasonName: string; // 賽季名稱
}
/**
 * @generated from protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank
 */
export interface SeasonStats_BestTeamRank {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string; // 榜單名稱
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.SeasonStats.SeasonStats.TeamRank rank = 2;
     */
    rank: SeasonStats_TeamRank[]; // 排行
}
/**
 * @generated from protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.PlayerRank
 */
export interface SeasonStats_PlayerRank {
    /**
     * @generated from protobuf field: int32 playerId = 1;
     */
    playerId: number; // 球員id
    /**
     * @generated from protobuf field: int32 teamId = 2;
     */
    teamId: number; // 球隊id
    /**
     * @generated from protobuf field: int32 position = 3;
     */
    position: number; // 排名
    /**
     * @generated from protobuf field: int32 total = 4;
     */
    total: number; // 排名
    /**
     * @generated from protobuf field: string seasonName = 5;
     */
    seasonName: string; // 賽季名稱
}
/**
 * @generated from protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank
 */
export interface SeasonStats_BestPlayerRank {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string; // 榜單名稱
    /**
     * @generated from protobuf field: repeated ApiProtos.Leagues.SeasonStats.SeasonStats.PlayerRank rank = 2;
     */
    rank: SeasonStats_PlayerRank[]; // 排行
}
/**
 * @generated from protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.Team
 */
export interface SeasonStats_Team {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 隊伍id
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 隊伍名稱
    /**
     * @generated from protobuf field: string logo = 3;
     */
    logo: string; // 隊伍logo
}
/**
 * @generated from protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.Player
 */
export interface SeasonStats_Player {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 球員id
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 球員名稱
    /**
     * @generated from protobuf field: string logo = 3;
     */
    logo: string; // 球員logo
}
// @generated message type with reflection information, may provide speed optimized methods
class SeasonStats$Type extends MessageType<SeasonStats> {
    constructor() {
        super("ApiProtos.Leagues.SeasonStats.SeasonStats", [
            { no: 1, name: "bestTeamRank", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SeasonStats_BestTeamRank },
            { no: 2, name: "bestTeamRankHistory", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SeasonStats_BestTeamRank },
            { no: 3, name: "bestPlayerRank", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SeasonStats_BestPlayerRank },
            { no: 4, name: "bestPlayerRankHistory", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SeasonStats_BestPlayerRank },
            { no: 5, name: "teams", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SeasonStats_Team },
            { no: 6, name: "players", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SeasonStats_Player }
        ]);
    }
    create(value?: PartialMessage<SeasonStats>): SeasonStats {
        const message = { bestTeamRank: [], bestTeamRankHistory: [], bestPlayerRank: [], bestPlayerRankHistory: [], teams: [], players: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SeasonStats>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SeasonStats): SeasonStats {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank bestTeamRank */ 1:
                    message.bestTeamRank.push(SeasonStats_BestTeamRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank bestTeamRankHistory */ 2:
                    message.bestTeamRankHistory.push(SeasonStats_BestTeamRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank bestPlayerRank */ 3:
                    message.bestPlayerRank.push(SeasonStats_BestPlayerRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank bestPlayerRankHistory */ 4:
                    message.bestPlayerRankHistory.push(SeasonStats_BestPlayerRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.Team teams */ 5:
                    message.teams.push(SeasonStats_Team.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.Player players */ 6:
                    message.players.push(SeasonStats_Player.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SeasonStats, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank bestTeamRank = 1; */
        for (let i = 0; i < message.bestTeamRank.length; i++)
            SeasonStats_BestTeamRank.internalBinaryWrite(message.bestTeamRank[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank bestTeamRankHistory = 2; */
        for (let i = 0; i < message.bestTeamRankHistory.length; i++)
            SeasonStats_BestTeamRank.internalBinaryWrite(message.bestTeamRankHistory[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank bestPlayerRank = 3; */
        for (let i = 0; i < message.bestPlayerRank.length; i++)
            SeasonStats_BestPlayerRank.internalBinaryWrite(message.bestPlayerRank[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank bestPlayerRankHistory = 4; */
        for (let i = 0; i < message.bestPlayerRankHistory.length; i++)
            SeasonStats_BestPlayerRank.internalBinaryWrite(message.bestPlayerRankHistory[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.Team teams = 5; */
        for (let i = 0; i < message.teams.length; i++)
            SeasonStats_Team.internalBinaryWrite(message.teams[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.Player players = 6; */
        for (let i = 0; i < message.players.length; i++)
            SeasonStats_Player.internalBinaryWrite(message.players[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats
 */
export const SeasonStats = new SeasonStats$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SeasonStats_TeamRank$Type extends MessageType<SeasonStats_TeamRank> {
    constructor() {
        super("ApiProtos.Leagues.SeasonStats.SeasonStats.TeamRank", [
            { no: 1, name: "teamId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "seasonName", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SeasonStats_TeamRank>): SeasonStats_TeamRank {
        const message = { teamId: 0, position: 0, total: 0, seasonName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SeasonStats_TeamRank>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SeasonStats_TeamRank): SeasonStats_TeamRank {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 teamId */ 1:
                    message.teamId = reader.int32();
                    break;
                case /* int32 position */ 2:
                    message.position = reader.int32();
                    break;
                case /* int32 total */ 3:
                    message.total = reader.int32();
                    break;
                case /* string seasonName */ 4:
                    message.seasonName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SeasonStats_TeamRank, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 teamId = 1; */
        if (message.teamId !== 0)
            writer.tag(1, WireType.Varint).int32(message.teamId);
        /* int32 position = 2; */
        if (message.position !== 0)
            writer.tag(2, WireType.Varint).int32(message.position);
        /* int32 total = 3; */
        if (message.total !== 0)
            writer.tag(3, WireType.Varint).int32(message.total);
        /* string seasonName = 4; */
        if (message.seasonName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.seasonName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.TeamRank
 */
export const SeasonStats_TeamRank = new SeasonStats_TeamRank$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SeasonStats_BestTeamRank$Type extends MessageType<SeasonStats_BestTeamRank> {
    constructor() {
        super("ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "rank", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SeasonStats_TeamRank }
        ]);
    }
    create(value?: PartialMessage<SeasonStats_BestTeamRank>): SeasonStats_BestTeamRank {
        const message = { name: "", rank: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SeasonStats_BestTeamRank>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SeasonStats_BestTeamRank): SeasonStats_BestTeamRank {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.TeamRank rank */ 2:
                    message.rank.push(SeasonStats_TeamRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SeasonStats_BestTeamRank, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.TeamRank rank = 2; */
        for (let i = 0; i < message.rank.length; i++)
            SeasonStats_TeamRank.internalBinaryWrite(message.rank[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.BestTeamRank
 */
export const SeasonStats_BestTeamRank = new SeasonStats_BestTeamRank$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SeasonStats_PlayerRank$Type extends MessageType<SeasonStats_PlayerRank> {
    constructor() {
        super("ApiProtos.Leagues.SeasonStats.SeasonStats.PlayerRank", [
            { no: 1, name: "playerId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "teamId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "seasonName", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SeasonStats_PlayerRank>): SeasonStats_PlayerRank {
        const message = { playerId: 0, teamId: 0, position: 0, total: 0, seasonName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SeasonStats_PlayerRank>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SeasonStats_PlayerRank): SeasonStats_PlayerRank {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 playerId */ 1:
                    message.playerId = reader.int32();
                    break;
                case /* int32 teamId */ 2:
                    message.teamId = reader.int32();
                    break;
                case /* int32 position */ 3:
                    message.position = reader.int32();
                    break;
                case /* int32 total */ 4:
                    message.total = reader.int32();
                    break;
                case /* string seasonName */ 5:
                    message.seasonName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SeasonStats_PlayerRank, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 playerId = 1; */
        if (message.playerId !== 0)
            writer.tag(1, WireType.Varint).int32(message.playerId);
        /* int32 teamId = 2; */
        if (message.teamId !== 0)
            writer.tag(2, WireType.Varint).int32(message.teamId);
        /* int32 position = 3; */
        if (message.position !== 0)
            writer.tag(3, WireType.Varint).int32(message.position);
        /* int32 total = 4; */
        if (message.total !== 0)
            writer.tag(4, WireType.Varint).int32(message.total);
        /* string seasonName = 5; */
        if (message.seasonName !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.seasonName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.PlayerRank
 */
export const SeasonStats_PlayerRank = new SeasonStats_PlayerRank$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SeasonStats_BestPlayerRank$Type extends MessageType<SeasonStats_BestPlayerRank> {
    constructor() {
        super("ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "rank", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SeasonStats_PlayerRank }
        ]);
    }
    create(value?: PartialMessage<SeasonStats_BestPlayerRank>): SeasonStats_BestPlayerRank {
        const message = { name: "", rank: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SeasonStats_BestPlayerRank>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SeasonStats_BestPlayerRank): SeasonStats_BestPlayerRank {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.PlayerRank rank */ 2:
                    message.rank.push(SeasonStats_PlayerRank.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SeasonStats_BestPlayerRank, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* repeated ApiProtos.Leagues.SeasonStats.SeasonStats.PlayerRank rank = 2; */
        for (let i = 0; i < message.rank.length; i++)
            SeasonStats_PlayerRank.internalBinaryWrite(message.rank[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.BestPlayerRank
 */
export const SeasonStats_BestPlayerRank = new SeasonStats_BestPlayerRank$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SeasonStats_Team$Type extends MessageType<SeasonStats_Team> {
    constructor() {
        super("ApiProtos.Leagues.SeasonStats.SeasonStats.Team", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SeasonStats_Team>): SeasonStats_Team {
        const message = { id: 0, name: "", logo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SeasonStats_Team>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SeasonStats_Team): SeasonStats_Team {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string logo */ 3:
                    message.logo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SeasonStats_Team, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string logo = 3; */
        if (message.logo !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.logo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.Team
 */
export const SeasonStats_Team = new SeasonStats_Team$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SeasonStats_Player$Type extends MessageType<SeasonStats_Player> {
    constructor() {
        super("ApiProtos.Leagues.SeasonStats.SeasonStats.Player", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "logo", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SeasonStats_Player>): SeasonStats_Player {
        const message = { id: 0, name: "", logo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SeasonStats_Player>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SeasonStats_Player): SeasonStats_Player {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string logo */ 3:
                    message.logo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SeasonStats_Player, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string logo = 3; */
        if (message.logo !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.logo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.Leagues.SeasonStats.SeasonStats.Player
 */
export const SeasonStats_Player = new SeasonStats_Player$Type();
