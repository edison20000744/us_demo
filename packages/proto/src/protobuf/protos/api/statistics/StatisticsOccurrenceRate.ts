// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "protobuf/protos/api/statistics/StatisticsOccurrenceRate.proto" (package "ApiProtos.statistics.StatisticsOccurrenceRate", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate
 */
export interface StatisticsOccurrenceRate {
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.ScoreStatistics statisticsData = 1;
     */
    statisticsData?: StatisticsOccurrenceRate_ScoreStatistics; // 比分統計資訊
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.GoalData goalData = 2;
     */
    goalData?: StatisticsOccurrenceRate_GoalData; // 進球統計資訊
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.LostData lostData = 3;
     */
    lostData?: StatisticsOccurrenceRate_LostData; // 失球統計資訊
    /**
     * @generated from protobuf field: int32 totalCount = 4;
     */
    totalCount: number; // 總場數
    /**
     * @generated from protobuf field: repeated ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.Season seasons = 5;
     */
    seasons: StatisticsOccurrenceRate_Season[]; // 賽季列表
}
/**
 * @generated from protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.SelectionInfo
 */
export interface StatisticsOccurrenceRate_SelectionInfo {
    /**
     * @generated from protobuf field: string selectionName = 1;
     */
    selectionName: string; // 選項名稱 0-0 0-1 0-2 0-3 1-0 1-1 1-2 1-3 2-0 2-1 2-2 2-3 3-0 3-1 3-2 3-3 homeFourOrMore awayFourOrMore
    /**
     * @generated from protobuf field: int32 appearCnt = 2;
     */
    appearCnt: number; // 出現次數
    /**
     * @generated from protobuf field: int32 notAppearCnt = 3;
     */
    notAppearCnt: number; // 未出現次數
    /**
     * @generated from protobuf field: string appearRate = 4;
     */
    appearRate: string; // 出現比率
    /**
     * @generated from protobuf field: string notAppearRate = 5;
     */
    notAppearRate: string; // 未出現比率
    /**
     * @generated from protobuf field: int32 continuedCount = 6;
     */
    continuedCount: number; // 連續出現次數
    /**
     * @generated from protobuf field: int32 continuedSeasons = 7;
     */
    continuedSeasons: number; // 連續出現共跨幾季
    /**
     * @generated from protobuf field: int32 notContinuedCount = 8;
     */
    notContinuedCount: number; // 連續未出現次數
    /**
     * @generated from protobuf field: int32 notContinuedSeasons = 9;
     */
    notContinuedSeasons: number; // 連續未出現共跨幾季
    /**
     * @generated from protobuf field: string continuedRate = 10;
     */
    continuedRate: string; // 再次連續出現機率
    /**
     * @generated from protobuf field: string winRate = 11;
     */
    winRate: string; // 再次連續出現 反波膽獲勝機率
    /**
     * @generated from protobuf field: string notContinuedRate = 12;
     */
    notContinuedRate: string; // 再次連續未出現機率
    /**
     * @generated from protobuf field: string failureRate = 13;
     */
    failureRate: string; // 再次連續出現 反波膽失敗機率
}
/**
 * @generated from protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.ScoreStatistics
 */
export interface StatisticsOccurrenceRate_ScoreStatistics {
    /**
     * @generated from protobuf field: repeated ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.SelectionInfo selections = 1;
     */
    selections: StatisticsOccurrenceRate_SelectionInfo[]; // 選項統計資訊
    /**
     * @generated from protobuf field: string maxScore = 2;
     */
    maxScore: string; // 出現次數最多比分
    /**
     * @generated from protobuf field: string maxValue = 3;
     */
    maxValue: string; // 出現次數最多比分 - 值
    /**
     * @generated from protobuf field: string minScore = 4;
     */
    minScore: string; // 出現次數最少比分
    /**
     * @generated from protobuf field: string minValue = 5;
     */
    minValue: string; // 出現次數最少比分 - 值
}
/**
 * @generated from protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem
 */
export interface StatisticsOccurrenceRate_StatisticsItem {
    /**
     * @generated from protobuf field: string selectionName = 1;
     */
    selectionName: string; // 選項名稱
    /**
     * @generated from protobuf field: int32 appearCnt = 2;
     */
    appearCnt: number; // 出現次數
    /**
     * @generated from protobuf field: int32 notAppearCnt = 3;
     */
    notAppearCnt: number; // 未出現次數
    /**
     * @generated from protobuf field: string appearRate = 4;
     */
    appearRate: string; // 出現比率
    /**
     * @generated from protobuf field: string notAppearRate = 5;
     */
    notAppearRate: string; // 未出現比率
    /**
     * @generated from protobuf field: int32 continuedCount = 6;
     */
    continuedCount: number; // 連續出現次數
    /**
     * @generated from protobuf field: int32 continuedSeasons = 7;
     */
    continuedSeasons: number; // 連續出現共跨幾季
    /**
     * @generated from protobuf field: int32 notContinuedCount = 8;
     */
    notContinuedCount: number; // 連續未出現次數
    /**
     * @generated from protobuf field: int32 notContinuedSeasons = 9;
     */
    notContinuedSeasons: number; // 連續未出現共跨幾季
}
/**
 * @generated from protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.GoalData
 */
export interface StatisticsOccurrenceRate_GoalData {
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem one = 1;
     */
    one?: StatisticsOccurrenceRate_StatisticsItem; // 一球統計資訊
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem two = 2;
     */
    two?: StatisticsOccurrenceRate_StatisticsItem; // 兩球統計資訊
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem three = 3;
     */
    three?: StatisticsOccurrenceRate_StatisticsItem; // 三球統計資訊
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem fourOrMore = 4;
     */
    fourOrMore?: StatisticsOccurrenceRate_StatisticsItem; // 四球(含)以上統計資訊
    /**
     * @generated from protobuf field: string averageGoal = 5;
     */
    averageGoal: string; // 平均進球
}
/**
 * @generated from protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.LostData
 */
export interface StatisticsOccurrenceRate_LostData {
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem one = 1;
     */
    one?: StatisticsOccurrenceRate_StatisticsItem; // 一球統計資訊
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem two = 2;
     */
    two?: StatisticsOccurrenceRate_StatisticsItem; // 兩球統計資訊
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem three = 3;
     */
    three?: StatisticsOccurrenceRate_StatisticsItem; // 三球統計資訊
    /**
     * @generated from protobuf field: ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem fourOrMore = 4;
     */
    fourOrMore?: StatisticsOccurrenceRate_StatisticsItem; // 四球(含)以上統計資訊
    /**
     * @generated from protobuf field: string averageLost = 5;
     */
    averageLost: string; // 平均失球
}
/**
 * @generated from protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.Season
 */
export interface StatisticsOccurrenceRate_Season {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number; // 賽季id
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string; // 賽季名稱
}
// @generated message type with reflection information, may provide speed optimized methods
class StatisticsOccurrenceRate$Type extends MessageType<StatisticsOccurrenceRate> {
    constructor() {
        super("ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate", [
            { no: 1, name: "statisticsData", kind: "message", T: () => StatisticsOccurrenceRate_ScoreStatistics },
            { no: 2, name: "goalData", kind: "message", T: () => StatisticsOccurrenceRate_GoalData },
            { no: 3, name: "lostData", kind: "message", T: () => StatisticsOccurrenceRate_LostData },
            { no: 4, name: "totalCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "seasons", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => StatisticsOccurrenceRate_Season }
        ]);
    }
    create(value?: PartialMessage<StatisticsOccurrenceRate>): StatisticsOccurrenceRate {
        const message = { totalCount: 0, seasons: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StatisticsOccurrenceRate>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StatisticsOccurrenceRate): StatisticsOccurrenceRate {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.ScoreStatistics statisticsData */ 1:
                    message.statisticsData = StatisticsOccurrenceRate_ScoreStatistics.internalBinaryRead(reader, reader.uint32(), options, message.statisticsData);
                    break;
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.GoalData goalData */ 2:
                    message.goalData = StatisticsOccurrenceRate_GoalData.internalBinaryRead(reader, reader.uint32(), options, message.goalData);
                    break;
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.LostData lostData */ 3:
                    message.lostData = StatisticsOccurrenceRate_LostData.internalBinaryRead(reader, reader.uint32(), options, message.lostData);
                    break;
                case /* int32 totalCount */ 4:
                    message.totalCount = reader.int32();
                    break;
                case /* repeated ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.Season seasons */ 5:
                    message.seasons.push(StatisticsOccurrenceRate_Season.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StatisticsOccurrenceRate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.ScoreStatistics statisticsData = 1; */
        if (message.statisticsData)
            StatisticsOccurrenceRate_ScoreStatistics.internalBinaryWrite(message.statisticsData, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.GoalData goalData = 2; */
        if (message.goalData)
            StatisticsOccurrenceRate_GoalData.internalBinaryWrite(message.goalData, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.LostData lostData = 3; */
        if (message.lostData)
            StatisticsOccurrenceRate_LostData.internalBinaryWrite(message.lostData, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int32 totalCount = 4; */
        if (message.totalCount !== 0)
            writer.tag(4, WireType.Varint).int32(message.totalCount);
        /* repeated ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.Season seasons = 5; */
        for (let i = 0; i < message.seasons.length; i++)
            StatisticsOccurrenceRate_Season.internalBinaryWrite(message.seasons[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate
 */
export const StatisticsOccurrenceRate = new StatisticsOccurrenceRate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StatisticsOccurrenceRate_SelectionInfo$Type extends MessageType<StatisticsOccurrenceRate_SelectionInfo> {
    constructor() {
        super("ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.SelectionInfo", [
            { no: 1, name: "selectionName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "appearCnt", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "notAppearCnt", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "appearRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "notAppearRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "continuedCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "continuedSeasons", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "notContinuedCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "notContinuedSeasons", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "continuedRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "winRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "notContinuedRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "failureRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<StatisticsOccurrenceRate_SelectionInfo>): StatisticsOccurrenceRate_SelectionInfo {
        const message = { selectionName: "", appearCnt: 0, notAppearCnt: 0, appearRate: "", notAppearRate: "", continuedCount: 0, continuedSeasons: 0, notContinuedCount: 0, notContinuedSeasons: 0, continuedRate: "", winRate: "", notContinuedRate: "", failureRate: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StatisticsOccurrenceRate_SelectionInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StatisticsOccurrenceRate_SelectionInfo): StatisticsOccurrenceRate_SelectionInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string selectionName */ 1:
                    message.selectionName = reader.string();
                    break;
                case /* int32 appearCnt */ 2:
                    message.appearCnt = reader.int32();
                    break;
                case /* int32 notAppearCnt */ 3:
                    message.notAppearCnt = reader.int32();
                    break;
                case /* string appearRate */ 4:
                    message.appearRate = reader.string();
                    break;
                case /* string notAppearRate */ 5:
                    message.notAppearRate = reader.string();
                    break;
                case /* int32 continuedCount */ 6:
                    message.continuedCount = reader.int32();
                    break;
                case /* int32 continuedSeasons */ 7:
                    message.continuedSeasons = reader.int32();
                    break;
                case /* int32 notContinuedCount */ 8:
                    message.notContinuedCount = reader.int32();
                    break;
                case /* int32 notContinuedSeasons */ 9:
                    message.notContinuedSeasons = reader.int32();
                    break;
                case /* string continuedRate */ 10:
                    message.continuedRate = reader.string();
                    break;
                case /* string winRate */ 11:
                    message.winRate = reader.string();
                    break;
                case /* string notContinuedRate */ 12:
                    message.notContinuedRate = reader.string();
                    break;
                case /* string failureRate */ 13:
                    message.failureRate = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StatisticsOccurrenceRate_SelectionInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string selectionName = 1; */
        if (message.selectionName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.selectionName);
        /* int32 appearCnt = 2; */
        if (message.appearCnt !== 0)
            writer.tag(2, WireType.Varint).int32(message.appearCnt);
        /* int32 notAppearCnt = 3; */
        if (message.notAppearCnt !== 0)
            writer.tag(3, WireType.Varint).int32(message.notAppearCnt);
        /* string appearRate = 4; */
        if (message.appearRate !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.appearRate);
        /* string notAppearRate = 5; */
        if (message.notAppearRate !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.notAppearRate);
        /* int32 continuedCount = 6; */
        if (message.continuedCount !== 0)
            writer.tag(6, WireType.Varint).int32(message.continuedCount);
        /* int32 continuedSeasons = 7; */
        if (message.continuedSeasons !== 0)
            writer.tag(7, WireType.Varint).int32(message.continuedSeasons);
        /* int32 notContinuedCount = 8; */
        if (message.notContinuedCount !== 0)
            writer.tag(8, WireType.Varint).int32(message.notContinuedCount);
        /* int32 notContinuedSeasons = 9; */
        if (message.notContinuedSeasons !== 0)
            writer.tag(9, WireType.Varint).int32(message.notContinuedSeasons);
        /* string continuedRate = 10; */
        if (message.continuedRate !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.continuedRate);
        /* string winRate = 11; */
        if (message.winRate !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.winRate);
        /* string notContinuedRate = 12; */
        if (message.notContinuedRate !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.notContinuedRate);
        /* string failureRate = 13; */
        if (message.failureRate !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.failureRate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.SelectionInfo
 */
export const StatisticsOccurrenceRate_SelectionInfo = new StatisticsOccurrenceRate_SelectionInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StatisticsOccurrenceRate_ScoreStatistics$Type extends MessageType<StatisticsOccurrenceRate_ScoreStatistics> {
    constructor() {
        super("ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.ScoreStatistics", [
            { no: 1, name: "selections", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => StatisticsOccurrenceRate_SelectionInfo },
            { no: 2, name: "maxScore", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "maxValue", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "minScore", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "minValue", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<StatisticsOccurrenceRate_ScoreStatistics>): StatisticsOccurrenceRate_ScoreStatistics {
        const message = { selections: [], maxScore: "", maxValue: "", minScore: "", minValue: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StatisticsOccurrenceRate_ScoreStatistics>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StatisticsOccurrenceRate_ScoreStatistics): StatisticsOccurrenceRate_ScoreStatistics {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.SelectionInfo selections */ 1:
                    message.selections.push(StatisticsOccurrenceRate_SelectionInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string maxScore */ 2:
                    message.maxScore = reader.string();
                    break;
                case /* string maxValue */ 3:
                    message.maxValue = reader.string();
                    break;
                case /* string minScore */ 4:
                    message.minScore = reader.string();
                    break;
                case /* string minValue */ 5:
                    message.minValue = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StatisticsOccurrenceRate_ScoreStatistics, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.SelectionInfo selections = 1; */
        for (let i = 0; i < message.selections.length; i++)
            StatisticsOccurrenceRate_SelectionInfo.internalBinaryWrite(message.selections[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string maxScore = 2; */
        if (message.maxScore !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.maxScore);
        /* string maxValue = 3; */
        if (message.maxValue !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.maxValue);
        /* string minScore = 4; */
        if (message.minScore !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.minScore);
        /* string minValue = 5; */
        if (message.minValue !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.minValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.ScoreStatistics
 */
export const StatisticsOccurrenceRate_ScoreStatistics = new StatisticsOccurrenceRate_ScoreStatistics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StatisticsOccurrenceRate_StatisticsItem$Type extends MessageType<StatisticsOccurrenceRate_StatisticsItem> {
    constructor() {
        super("ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem", [
            { no: 1, name: "selectionName", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "appearCnt", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "notAppearCnt", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "appearRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "notAppearRate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "continuedCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "continuedSeasons", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "notContinuedCount", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "notContinuedSeasons", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<StatisticsOccurrenceRate_StatisticsItem>): StatisticsOccurrenceRate_StatisticsItem {
        const message = { selectionName: "", appearCnt: 0, notAppearCnt: 0, appearRate: "", notAppearRate: "", continuedCount: 0, continuedSeasons: 0, notContinuedCount: 0, notContinuedSeasons: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StatisticsOccurrenceRate_StatisticsItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StatisticsOccurrenceRate_StatisticsItem): StatisticsOccurrenceRate_StatisticsItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string selectionName */ 1:
                    message.selectionName = reader.string();
                    break;
                case /* int32 appearCnt */ 2:
                    message.appearCnt = reader.int32();
                    break;
                case /* int32 notAppearCnt */ 3:
                    message.notAppearCnt = reader.int32();
                    break;
                case /* string appearRate */ 4:
                    message.appearRate = reader.string();
                    break;
                case /* string notAppearRate */ 5:
                    message.notAppearRate = reader.string();
                    break;
                case /* int32 continuedCount */ 6:
                    message.continuedCount = reader.int32();
                    break;
                case /* int32 continuedSeasons */ 7:
                    message.continuedSeasons = reader.int32();
                    break;
                case /* int32 notContinuedCount */ 8:
                    message.notContinuedCount = reader.int32();
                    break;
                case /* int32 notContinuedSeasons */ 9:
                    message.notContinuedSeasons = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StatisticsOccurrenceRate_StatisticsItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string selectionName = 1; */
        if (message.selectionName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.selectionName);
        /* int32 appearCnt = 2; */
        if (message.appearCnt !== 0)
            writer.tag(2, WireType.Varint).int32(message.appearCnt);
        /* int32 notAppearCnt = 3; */
        if (message.notAppearCnt !== 0)
            writer.tag(3, WireType.Varint).int32(message.notAppearCnt);
        /* string appearRate = 4; */
        if (message.appearRate !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.appearRate);
        /* string notAppearRate = 5; */
        if (message.notAppearRate !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.notAppearRate);
        /* int32 continuedCount = 6; */
        if (message.continuedCount !== 0)
            writer.tag(6, WireType.Varint).int32(message.continuedCount);
        /* int32 continuedSeasons = 7; */
        if (message.continuedSeasons !== 0)
            writer.tag(7, WireType.Varint).int32(message.continuedSeasons);
        /* int32 notContinuedCount = 8; */
        if (message.notContinuedCount !== 0)
            writer.tag(8, WireType.Varint).int32(message.notContinuedCount);
        /* int32 notContinuedSeasons = 9; */
        if (message.notContinuedSeasons !== 0)
            writer.tag(9, WireType.Varint).int32(message.notContinuedSeasons);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem
 */
export const StatisticsOccurrenceRate_StatisticsItem = new StatisticsOccurrenceRate_StatisticsItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StatisticsOccurrenceRate_GoalData$Type extends MessageType<StatisticsOccurrenceRate_GoalData> {
    constructor() {
        super("ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.GoalData", [
            { no: 1, name: "one", kind: "message", T: () => StatisticsOccurrenceRate_StatisticsItem },
            { no: 2, name: "two", kind: "message", T: () => StatisticsOccurrenceRate_StatisticsItem },
            { no: 3, name: "three", kind: "message", T: () => StatisticsOccurrenceRate_StatisticsItem },
            { no: 4, name: "fourOrMore", kind: "message", T: () => StatisticsOccurrenceRate_StatisticsItem },
            { no: 5, name: "averageGoal", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<StatisticsOccurrenceRate_GoalData>): StatisticsOccurrenceRate_GoalData {
        const message = { averageGoal: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StatisticsOccurrenceRate_GoalData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StatisticsOccurrenceRate_GoalData): StatisticsOccurrenceRate_GoalData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem one */ 1:
                    message.one = StatisticsOccurrenceRate_StatisticsItem.internalBinaryRead(reader, reader.uint32(), options, message.one);
                    break;
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem two */ 2:
                    message.two = StatisticsOccurrenceRate_StatisticsItem.internalBinaryRead(reader, reader.uint32(), options, message.two);
                    break;
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem three */ 3:
                    message.three = StatisticsOccurrenceRate_StatisticsItem.internalBinaryRead(reader, reader.uint32(), options, message.three);
                    break;
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem fourOrMore */ 4:
                    message.fourOrMore = StatisticsOccurrenceRate_StatisticsItem.internalBinaryRead(reader, reader.uint32(), options, message.fourOrMore);
                    break;
                case /* string averageGoal */ 5:
                    message.averageGoal = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StatisticsOccurrenceRate_GoalData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem one = 1; */
        if (message.one)
            StatisticsOccurrenceRate_StatisticsItem.internalBinaryWrite(message.one, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem two = 2; */
        if (message.two)
            StatisticsOccurrenceRate_StatisticsItem.internalBinaryWrite(message.two, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem three = 3; */
        if (message.three)
            StatisticsOccurrenceRate_StatisticsItem.internalBinaryWrite(message.three, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem fourOrMore = 4; */
        if (message.fourOrMore)
            StatisticsOccurrenceRate_StatisticsItem.internalBinaryWrite(message.fourOrMore, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string averageGoal = 5; */
        if (message.averageGoal !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.averageGoal);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.GoalData
 */
export const StatisticsOccurrenceRate_GoalData = new StatisticsOccurrenceRate_GoalData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StatisticsOccurrenceRate_LostData$Type extends MessageType<StatisticsOccurrenceRate_LostData> {
    constructor() {
        super("ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.LostData", [
            { no: 1, name: "one", kind: "message", T: () => StatisticsOccurrenceRate_StatisticsItem },
            { no: 2, name: "two", kind: "message", T: () => StatisticsOccurrenceRate_StatisticsItem },
            { no: 3, name: "three", kind: "message", T: () => StatisticsOccurrenceRate_StatisticsItem },
            { no: 4, name: "fourOrMore", kind: "message", T: () => StatisticsOccurrenceRate_StatisticsItem },
            { no: 5, name: "averageLost", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<StatisticsOccurrenceRate_LostData>): StatisticsOccurrenceRate_LostData {
        const message = { averageLost: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StatisticsOccurrenceRate_LostData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StatisticsOccurrenceRate_LostData): StatisticsOccurrenceRate_LostData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem one */ 1:
                    message.one = StatisticsOccurrenceRate_StatisticsItem.internalBinaryRead(reader, reader.uint32(), options, message.one);
                    break;
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem two */ 2:
                    message.two = StatisticsOccurrenceRate_StatisticsItem.internalBinaryRead(reader, reader.uint32(), options, message.two);
                    break;
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem three */ 3:
                    message.three = StatisticsOccurrenceRate_StatisticsItem.internalBinaryRead(reader, reader.uint32(), options, message.three);
                    break;
                case /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem fourOrMore */ 4:
                    message.fourOrMore = StatisticsOccurrenceRate_StatisticsItem.internalBinaryRead(reader, reader.uint32(), options, message.fourOrMore);
                    break;
                case /* string averageLost */ 5:
                    message.averageLost = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StatisticsOccurrenceRate_LostData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem one = 1; */
        if (message.one)
            StatisticsOccurrenceRate_StatisticsItem.internalBinaryWrite(message.one, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem two = 2; */
        if (message.two)
            StatisticsOccurrenceRate_StatisticsItem.internalBinaryWrite(message.two, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem three = 3; */
        if (message.three)
            StatisticsOccurrenceRate_StatisticsItem.internalBinaryWrite(message.three, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.StatisticsItem fourOrMore = 4; */
        if (message.fourOrMore)
            StatisticsOccurrenceRate_StatisticsItem.internalBinaryWrite(message.fourOrMore, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string averageLost = 5; */
        if (message.averageLost !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.averageLost);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.LostData
 */
export const StatisticsOccurrenceRate_LostData = new StatisticsOccurrenceRate_LostData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StatisticsOccurrenceRate_Season$Type extends MessageType<StatisticsOccurrenceRate_Season> {
    constructor() {
        super("ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.Season", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<StatisticsOccurrenceRate_Season>): StatisticsOccurrenceRate_Season {
        const message = { id: 0, name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StatisticsOccurrenceRate_Season>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StatisticsOccurrenceRate_Season): StatisticsOccurrenceRate_Season {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StatisticsOccurrenceRate_Season, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ApiProtos.statistics.StatisticsOccurrenceRate.StatisticsOccurrenceRate.Season
 */
export const StatisticsOccurrenceRate_Season = new StatisticsOccurrenceRate_Season$Type();
